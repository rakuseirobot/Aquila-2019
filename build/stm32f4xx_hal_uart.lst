ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB168:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration  
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 14


 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 15


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 16


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 17


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 18


 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 19


1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 20


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 21


1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 22


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 23


1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 24


1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 25


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 26


1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 27


1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 28


1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 29


1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 30


1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 31


1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 32


1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 33


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 34


1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 35


1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 36


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 37


2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 38


2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 39


2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 2142 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  35              		.loc 1 2144 0
  36 0000 0268     		ldr	r2, [r0]
  37 0002 D368     		ldr	r3, [r2, #12]
  38 0004 23F0C003 		bic	r3, r3, #192
  39 0008 D360     		str	r3, [r2, #12]
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  40              		.loc 1 2147 0
  41 000a 2023     		movs	r3, #32
  42 000c 80F83930 		strb	r3, [r0, #57]
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE168:
  47 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	UART_EndRxTransfer:
  53              	.LFB169:
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  54              		.loc 1 2156 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2158 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 D368     		ldr	r3, [r2, #12]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 D360     		str	r3, [r2, #12]
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 2159 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 40


  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 5361     		str	r3, [r2, #20]
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 2162 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F83A30 		strb	r3, [r0, #58]
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE169:
  77              		.section	.text.UART_Transmit_IT,"ax",%progbits
  78              		.align	2
  79              		.thumb
  80              		.thumb_func
  82              	UART_Transmit_IT:
  83              	.LFB175:
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 41


2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 42


2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  84              		.loc 1 2305 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL2:
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  90              		.loc 1 2309 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 43


  91 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  92 0004 DBB2     		uxtb	r3, r3
  93 0006 212B     		cmp	r3, #33
  94 0008 2BD1     		bne	.L8
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  95              		.loc 1 2311 0
  96 000a 8368     		ldr	r3, [r0, #8]
  97 000c B3F5805F 		cmp	r3, #4096
  98 0010 0FD1     		bne	.L5
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
  99              		.loc 1 2313 0
 100 0012 036A     		ldr	r3, [r0, #32]
 101              	.LVL3:
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 102              		.loc 1 2314 0
 103 0014 0268     		ldr	r2, [r0]
 104 0016 1B88     		ldrh	r3, [r3]
 105              	.LVL4:
 106 0018 C3F30803 		ubfx	r3, r3, #0, #9
 107 001c 5360     		str	r3, [r2, #4]
 108              	.LVL5:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 109              		.loc 1 2315 0
 110 001e 0369     		ldr	r3, [r0, #16]
 111 0020 1BB9     		cbnz	r3, .L6
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 112              		.loc 1 2317 0
 113 0022 036A     		ldr	r3, [r0, #32]
 114 0024 0233     		adds	r3, r3, #2
 115 0026 0362     		str	r3, [r0, #32]
 116 0028 09E0     		b	.L7
 117              	.L6:
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 118              		.loc 1 2321 0
 119 002a 036A     		ldr	r3, [r0, #32]
 120 002c 0133     		adds	r3, r3, #1
 121 002e 0362     		str	r3, [r0, #32]
 122 0030 05E0     		b	.L7
 123              	.L5:
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 124              		.loc 1 2326 0
 125 0032 0268     		ldr	r2, [r0]
 126 0034 036A     		ldr	r3, [r0, #32]
 127 0036 591C     		adds	r1, r3, #1
 128 0038 0162     		str	r1, [r0, #32]
 129 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130 003c 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 44


 131              	.L7:
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 132              		.loc 1 2329 0
 133 003e C38C     		ldrh	r3, [r0, #38]
 134 0040 9BB2     		uxth	r3, r3
 135 0042 013B     		subs	r3, r3, #1
 136 0044 9BB2     		uxth	r3, r3
 137 0046 C384     		strh	r3, [r0, #38]	@ movhi
 138 0048 6BB9     		cbnz	r3, .L9
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 139              		.loc 1 2332 0
 140 004a 0268     		ldr	r2, [r0]
 141 004c D368     		ldr	r3, [r2, #12]
 142 004e 23F08003 		bic	r3, r3, #128
 143 0052 D360     		str	r3, [r2, #12]
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 144              		.loc 1 2335 0
 145 0054 0268     		ldr	r2, [r0]
 146 0056 D368     		ldr	r3, [r2, #12]
 147 0058 43F04003 		orr	r3, r3, #64
 148 005c D360     		str	r3, [r2, #12]
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 149              		.loc 1 2337 0
 150 005e 0020     		movs	r0, #0
 151              	.LVL6:
 152 0060 7047     		bx	lr
 153              	.LVL7:
 154              	.L8:
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 155              		.loc 1 2341 0
 156 0062 0220     		movs	r0, #2
 157              	.LVL8:
 158 0064 7047     		bx	lr
 159              	.LVL9:
 160              	.L9:
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 161              		.loc 1 2337 0
 162 0066 0020     		movs	r0, #0
 163              	.LVL10:
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 164              		.loc 1 2343 0
 165 0068 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE175:
 169 006a 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 170              		.align	2
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 45


 171              		.thumb
 172              		.thumb_func
 174              	UART_SetConfig:
 175              	.LFB178:
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 46


2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 176              		.loc 1 2433 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              	.LVL11:
 181 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 182              	.LCFI0:
 183              		.cfi_def_cfa_offset 32
 184              		.cfi_offset 3, -32
 185              		.cfi_offset 4, -28
 186              		.cfi_offset 5, -24
 187              		.cfi_offset 6, -20
 188              		.cfi_offset 7, -16
 189              		.cfi_offset 8, -12
 190              		.cfi_offset 9, -8
 191              		.cfi_offset 14, -4
 192 0004 0446     		mov	r4, r0
 193              	.LVL12:
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 47


2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 194              		.loc 1 2443 0
 195 0006 0168     		ldr	r1, [r0]
 196 0008 0B69     		ldr	r3, [r1, #16]
 197              	.LVL13:
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 198              		.loc 1 2446 0
 199 000a 23F44052 		bic	r2, r3, #12288
 200              	.LVL14:
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 201              		.loc 1 2449 0
 202 000e C368     		ldr	r3, [r0, #12]
 203 0010 1343     		orrs	r3, r3, r2
 204              	.LVL15:
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 205              		.loc 1 2452 0
 206 0012 0B61     		str	r3, [r1, #16]
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 207              		.loc 1 2455 0
 208 0014 0068     		ldr	r0, [r0]
 209              	.LVL16:
 210 0016 C368     		ldr	r3, [r0, #12]
 211              	.LVL17:
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 212              		.loc 1 2458 0
 213 0018 23F41642 		bic	r2, r3, #38400
 214 001c 22F00C02 		bic	r2, r2, #12
 215              	.LVL18:
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 216              		.loc 1 2466 0
 217 0020 A168     		ldr	r1, [r4, #8]
 218 0022 2369     		ldr	r3, [r4, #16]
 219 0024 1943     		orrs	r1, r1, r3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 48


 220 0026 6369     		ldr	r3, [r4, #20]
 221 0028 1943     		orrs	r1, r1, r3
 222 002a E369     		ldr	r3, [r4, #28]
 223 002c 0B43     		orrs	r3, r3, r1
 224 002e 1343     		orrs	r3, r3, r2
 225              	.LVL19:
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 226              		.loc 1 2469 0
 227 0030 C360     		str	r3, [r0, #12]
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 228              		.loc 1 2472 0
 229 0032 2168     		ldr	r1, [r4]
 230 0034 4B69     		ldr	r3, [r1, #20]
 231              	.LVL20:
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 232              		.loc 1 2475 0
 233 0036 23F44072 		bic	r2, r3, #768
 234              	.LVL21:
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 235              		.loc 1 2478 0
 236 003a A369     		ldr	r3, [r4, #24]
 237 003c 1343     		orrs	r3, r3, r2
 238              	.LVL22:
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 239              		.loc 1 2481 0
 240 003e 4B61     		str	r3, [r1, #20]
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 241              		.loc 1 2484 0
 242 0040 E369     		ldr	r3, [r4, #28]
 243              	.LVL23:
 244 0042 B3F5004F 		cmp	r3, #32768
 245 0046 40F0BB80 		bne	.L11
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 246              		.loc 1 2488 0
 247 004a 2768     		ldr	r7, [r4]
 248 004c 03F18043 		add	r3, r3, #1073741824
 249 0050 03F51043 		add	r3, r3, #36864
 250 0054 9F42     		cmp	r7, r3
 251 0056 03D0     		beq	.L12
 252              		.loc 1 2488 0 is_stmt 0 discriminator 1
 253 0058 03F58063 		add	r3, r3, #1024
 254 005c 9F42     		cmp	r7, r3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 49


 255 005e 57D1     		bne	.L13
 256              	.L12:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 257              		.loc 1 2490 0 is_stmt 1
 258 0060 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 259              	.LVL24:
 260 0064 00EB8000 		add	r0, r0, r0, lsl #2
 261 0068 00EB8000 		add	r0, r0, r0, lsl #2
 262 006c 6568     		ldr	r5, [r4, #4]
 263 006e 6D00     		lsls	r5, r5, #1
 264 0070 B0FBF5F5 		udiv	r5, r0, r5
 265 0074 AB4E     		ldr	r6, .L18
 266 0076 A6FB0535 		umull	r3, r5, r6, r5
 267 007a 6D09     		lsrs	r5, r5, #5
 268 007c 2D01     		lsls	r5, r5, #4
 269 007e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 270              	.LVL25:
 271 0082 00EB8000 		add	r0, r0, r0, lsl #2
 272 0086 00EB8000 		add	r0, r0, r0, lsl #2
 273 008a 6368     		ldr	r3, [r4, #4]
 274 008c 5B00     		lsls	r3, r3, #1
 275 008e B0FBF3F9 		udiv	r9, r0, r3
 276 0092 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 277              	.LVL26:
 278 0096 00EB8000 		add	r0, r0, r0, lsl #2
 279 009a 00EB8000 		add	r0, r0, r0, lsl #2
 280 009e 6368     		ldr	r3, [r4, #4]
 281 00a0 5B00     		lsls	r3, r3, #1
 282 00a2 B0FBF3F3 		udiv	r3, r0, r3
 283 00a6 A6FB0323 		umull	r2, r3, r6, r3
 284 00aa 5B09     		lsrs	r3, r3, #5
 285 00ac 4FF06408 		mov	r8, #100
 286 00b0 08FB1393 		mls	r3, r8, r3, r9
 287 00b4 DB00     		lsls	r3, r3, #3
 288 00b6 3233     		adds	r3, r3, #50
 289 00b8 A6FB0323 		umull	r2, r3, r6, r3
 290 00bc 5B09     		lsrs	r3, r3, #5
 291 00be 5B00     		lsls	r3, r3, #1
 292 00c0 03F4F873 		and	r3, r3, #496
 293 00c4 1D44     		add	r5, r5, r3
 294 00c6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 295              	.LVL27:
 296 00ca 00EB8000 		add	r0, r0, r0, lsl #2
 297 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 298 00d2 6368     		ldr	r3, [r4, #4]
 299 00d4 5B00     		lsls	r3, r3, #1
 300 00d6 B0FBF3F9 		udiv	r9, r0, r3
 301 00da FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 302              	.LVL28:
 303 00de 00EB8000 		add	r0, r0, r0, lsl #2
 304 00e2 00EB8000 		add	r0, r0, r0, lsl #2
 305 00e6 6368     		ldr	r3, [r4, #4]
 306 00e8 5B00     		lsls	r3, r3, #1
 307 00ea B0FBF3F3 		udiv	r3, r0, r3
 308 00ee A6FB0323 		umull	r2, r3, r6, r3
 309 00f2 5B09     		lsrs	r3, r3, #5
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 50


 310 00f4 08FB1398 		mls	r8, r8, r3, r9
 311 00f8 4FEAC808 		lsl	r8, r8, #3
 312 00fc 08F13208 		add	r8, r8, #50
 313 0100 A6FB0836 		umull	r3, r6, r6, r8
 314 0104 C6F34216 		ubfx	r6, r6, #5, #3
 315 0108 3544     		add	r5, r5, r6
 316 010a BD60     		str	r5, [r7, #8]
 317 010c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 318              	.LVL29:
 319              	.L13:
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 320              		.loc 1 2500 0
 321 0110 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 322              	.LVL30:
 323 0114 00EB8000 		add	r0, r0, r0, lsl #2
 324 0118 00EB8000 		add	r0, r0, r0, lsl #2
 325 011c 6568     		ldr	r5, [r4, #4]
 326 011e 6D00     		lsls	r5, r5, #1
 327 0120 B0FBF5F5 		udiv	r5, r0, r5
 328 0124 7F4E     		ldr	r6, .L18
 329 0126 A6FB0535 		umull	r3, r5, r6, r5
 330 012a 6D09     		lsrs	r5, r5, #5
 331 012c 2D01     		lsls	r5, r5, #4
 332 012e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 333              	.LVL31:
 334 0132 00EB8000 		add	r0, r0, r0, lsl #2
 335 0136 00EB8000 		add	r0, r0, r0, lsl #2
 336 013a 6368     		ldr	r3, [r4, #4]
 337 013c 5B00     		lsls	r3, r3, #1
 338 013e B0FBF3F9 		udiv	r9, r0, r3
 339 0142 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 340              	.LVL32:
 341 0146 00EB8000 		add	r0, r0, r0, lsl #2
 342 014a 00EB8000 		add	r0, r0, r0, lsl #2
 343 014e 6368     		ldr	r3, [r4, #4]
 344 0150 5B00     		lsls	r3, r3, #1
 345 0152 B0FBF3F3 		udiv	r3, r0, r3
 346 0156 A6FB0323 		umull	r2, r3, r6, r3
 347 015a 5B09     		lsrs	r3, r3, #5
 348 015c 4FF06408 		mov	r8, #100
 349 0160 08FB1393 		mls	r3, r8, r3, r9
 350 0164 DB00     		lsls	r3, r3, #3
 351 0166 3233     		adds	r3, r3, #50
 352 0168 A6FB0323 		umull	r2, r3, r6, r3
 353 016c 5B09     		lsrs	r3, r3, #5
 354 016e 5B00     		lsls	r3, r3, #1
 355 0170 03F4F873 		and	r3, r3, #496
 356 0174 1D44     		add	r5, r5, r3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 51


 357 0176 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 358              	.LVL33:
 359 017a 00EB8000 		add	r0, r0, r0, lsl #2
 360 017e 00EB8000 		add	r0, r0, r0, lsl #2
 361 0182 6368     		ldr	r3, [r4, #4]
 362 0184 5B00     		lsls	r3, r3, #1
 363 0186 B0FBF3F9 		udiv	r9, r0, r3
 364 018a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 365              	.LVL34:
 366 018e 00EB8000 		add	r0, r0, r0, lsl #2
 367 0192 00EB8000 		add	r0, r0, r0, lsl #2
 368 0196 6368     		ldr	r3, [r4, #4]
 369 0198 5B00     		lsls	r3, r3, #1
 370 019a B0FBF3F3 		udiv	r3, r0, r3
 371 019e A6FB0323 		umull	r2, r3, r6, r3
 372 01a2 5B09     		lsrs	r3, r3, #5
 373 01a4 08FB1398 		mls	r8, r8, r3, r9
 374 01a8 4FEAC808 		lsl	r8, r8, #3
 375 01ac 08F13208 		add	r8, r8, #50
 376 01b0 A6FB0836 		umull	r3, r6, r6, r8
 377 01b4 C6F34216 		ubfx	r6, r6, #5, #3
 378 01b8 3544     		add	r5, r5, r6
 379 01ba BD60     		str	r5, [r7, #8]
 380 01bc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 381              	.LVL35:
 382              	.L11:
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 383              		.loc 1 2507 0
 384 01c0 2668     		ldr	r6, [r4]
 385 01c2 594B     		ldr	r3, .L18+4
 386 01c4 9E42     		cmp	r6, r3
 387 01c6 03D0     		beq	.L15
 388              		.loc 1 2507 0 is_stmt 0 discriminator 1
 389 01c8 03F58063 		add	r3, r3, #1024
 390 01cc 9E42     		cmp	r6, r3
 391 01ce 54D1     		bne	.L16
 392              	.L15:
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 393              		.loc 1 2509 0 is_stmt 1
 394 01d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 395              	.LVL36:
 396 01d4 00EB8000 		add	r0, r0, r0, lsl #2
 397 01d8 00EB8000 		add	r0, r0, r0, lsl #2
 398 01dc 6568     		ldr	r5, [r4, #4]
 399 01de AD00     		lsls	r5, r5, #2
 400 01e0 B0FBF5F5 		udiv	r5, r0, r5
 401 01e4 4F4F     		ldr	r7, .L18
 402 01e6 A7FB0535 		umull	r3, r5, r7, r5
 403 01ea 6D09     		lsrs	r5, r5, #5
 404 01ec 2D01     		lsls	r5, r5, #4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 52


 405 01ee FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 406              	.LVL37:
 407 01f2 00EB8000 		add	r0, r0, r0, lsl #2
 408 01f6 00EB8000 		add	r0, r0, r0, lsl #2
 409 01fa 6368     		ldr	r3, [r4, #4]
 410 01fc 9B00     		lsls	r3, r3, #2
 411 01fe B0FBF3F8 		udiv	r8, r0, r3
 412 0202 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 413              	.LVL38:
 414 0206 00EB8000 		add	r0, r0, r0, lsl #2
 415 020a 00EB8000 		add	r0, r0, r0, lsl #2
 416 020e 6368     		ldr	r3, [r4, #4]
 417 0210 9B00     		lsls	r3, r3, #2
 418 0212 B0FBF3F3 		udiv	r3, r0, r3
 419 0216 A7FB0323 		umull	r2, r3, r7, r3
 420 021a 5B09     		lsrs	r3, r3, #5
 421 021c 4FF06409 		mov	r9, #100
 422 0220 09FB1383 		mls	r3, r9, r3, r8
 423 0224 1B01     		lsls	r3, r3, #4
 424 0226 3233     		adds	r3, r3, #50
 425 0228 A7FB0323 		umull	r2, r3, r7, r3
 426 022c 5B09     		lsrs	r3, r3, #5
 427 022e 03F0F003 		and	r3, r3, #240
 428 0232 1D44     		add	r5, r5, r3
 429 0234 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 430              	.LVL39:
 431 0238 00EB8000 		add	r0, r0, r0, lsl #2
 432 023c 00EB8000 		add	r0, r0, r0, lsl #2
 433 0240 6368     		ldr	r3, [r4, #4]
 434 0242 9B00     		lsls	r3, r3, #2
 435 0244 B0FBF3F8 		udiv	r8, r0, r3
 436 0248 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 437              	.LVL40:
 438 024c 00EB8000 		add	r0, r0, r0, lsl #2
 439 0250 00EB8000 		add	r0, r0, r0, lsl #2
 440 0254 6368     		ldr	r3, [r4, #4]
 441 0256 9B00     		lsls	r3, r3, #2
 442 0258 B0FBF3F3 		udiv	r3, r0, r3
 443 025c A7FB0323 		umull	r2, r3, r7, r3
 444 0260 5B09     		lsrs	r3, r3, #5
 445 0262 09FB1383 		mls	r3, r9, r3, r8
 446 0266 1B01     		lsls	r3, r3, #4
 447 0268 3233     		adds	r3, r3, #50
 448 026a A7FB0323 		umull	r2, r3, r7, r3
 449 026e C3F34313 		ubfx	r3, r3, #5, #4
 450 0272 1D44     		add	r5, r5, r3
 451 0274 B560     		str	r5, [r6, #8]
 452 0276 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 453              	.LVL41:
 454              	.L16:
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 53


2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 455              		.loc 1 2519 0
 456 027a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 457              	.LVL42:
 458 027e 00EB8000 		add	r0, r0, r0, lsl #2
 459 0282 00EB8000 		add	r0, r0, r0, lsl #2
 460 0286 6568     		ldr	r5, [r4, #4]
 461 0288 AD00     		lsls	r5, r5, #2
 462 028a B0FBF5F5 		udiv	r5, r0, r5
 463 028e 254F     		ldr	r7, .L18
 464 0290 A7FB0535 		umull	r3, r5, r7, r5
 465 0294 6D09     		lsrs	r5, r5, #5
 466 0296 2D01     		lsls	r5, r5, #4
 467 0298 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 468              	.LVL43:
 469 029c 00EB8000 		add	r0, r0, r0, lsl #2
 470 02a0 00EB8000 		add	r0, r0, r0, lsl #2
 471 02a4 6368     		ldr	r3, [r4, #4]
 472 02a6 9B00     		lsls	r3, r3, #2
 473 02a8 B0FBF3F8 		udiv	r8, r0, r3
 474 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 475              	.LVL44:
 476 02b0 00EB8000 		add	r0, r0, r0, lsl #2
 477 02b4 00EB8000 		add	r0, r0, r0, lsl #2
 478 02b8 6368     		ldr	r3, [r4, #4]
 479 02ba 9B00     		lsls	r3, r3, #2
 480 02bc B0FBF3F3 		udiv	r3, r0, r3
 481 02c0 A7FB0323 		umull	r2, r3, r7, r3
 482 02c4 5B09     		lsrs	r3, r3, #5
 483 02c6 4FF06409 		mov	r9, #100
 484 02ca 09FB1383 		mls	r3, r9, r3, r8
 485 02ce 1B01     		lsls	r3, r3, #4
 486 02d0 3233     		adds	r3, r3, #50
 487 02d2 A7FB0323 		umull	r2, r3, r7, r3
 488 02d6 5B09     		lsrs	r3, r3, #5
 489 02d8 03F0F003 		and	r3, r3, #240
 490 02dc 1D44     		add	r5, r5, r3
 491 02de FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 492              	.LVL45:
 493 02e2 00EB8000 		add	r0, r0, r0, lsl #2
 494 02e6 00EB8000 		add	r0, r0, r0, lsl #2
 495 02ea 6368     		ldr	r3, [r4, #4]
 496 02ec 9B00     		lsls	r3, r3, #2
 497 02ee B0FBF3F8 		udiv	r8, r0, r3
 498 02f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 499              	.LVL46:
 500 02f6 00EB8000 		add	r0, r0, r0, lsl #2
 501 02fa 00EB8000 		add	r0, r0, r0, lsl #2
 502 02fe 6368     		ldr	r3, [r4, #4]
 503 0300 9B00     		lsls	r3, r3, #2
 504 0302 B0FBF3F3 		udiv	r3, r0, r3
 505 0306 A7FB0323 		umull	r2, r3, r7, r3
 506 030a 5B09     		lsrs	r3, r3, #5
 507 030c 09FB1383 		mls	r3, r9, r3, r8
 508 0310 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 54


 509 0312 3233     		adds	r3, r3, #50
 510 0314 A7FB0323 		umull	r2, r3, r7, r3
 511 0318 C3F34313 		ubfx	r3, r3, #5, #4
 512 031c 1D44     		add	r5, r5, r3
 513 031e B560     		str	r5, [r6, #8]
 514 0320 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 515              	.LVL47:
 516              	.L19:
 517              		.align	2
 518              	.L18:
 519 0324 1F85EB51 		.word	1374389535
 520 0328 00100140 		.word	1073811456
 521              		.cfi_endproc
 522              	.LFE178:
 524              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 525              		.align	2
 526              		.thumb
 527              		.thumb_func
 529              	UART_WaitOnFlagUntilTimeout:
 530              	.LFB167:
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 531              		.loc 1 2109 0
 532              		.cfi_startproc
 533              		@ args = 4, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              	.LVL48:
 536 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 537              	.LCFI1:
 538              		.cfi_def_cfa_offset 24
 539              		.cfi_offset 4, -24
 540              		.cfi_offset 5, -20
 541              		.cfi_offset 6, -16
 542              		.cfi_offset 7, -12
 543              		.cfi_offset 8, -8
 544              		.cfi_offset 14, -4
 545 0004 0546     		mov	r5, r0
 546 0006 0F46     		mov	r7, r1
 547 0008 1646     		mov	r6, r2
 548 000a 9846     		mov	r8, r3
 549 000c 069C     		ldr	r4, [sp, #24]
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 550              		.loc 1 2111 0
 551 000e 1EE0     		b	.L22
 552              	.LVL49:
 553              	.L25:
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 554              		.loc 1 2114 0
 555 0010 B4F1FF3F 		cmp	r4, #-1
 556 0014 1BD0     		beq	.L22
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 557              		.loc 1 2116 0
 558 0016 2CB1     		cbz	r4, .L23
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 559              		.loc 1 2116 0 is_stmt 0 discriminator 1
 560 0018 FFF7FEFF 		bl	HAL_GetTick
 561              	.LVL50:
 562 001c C8EB0000 		rsb	r0, r8, r0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 55


 563 0020 8442     		cmp	r4, r0
 564 0022 14D2     		bcs	.L22
 565              	.L23:
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 566              		.loc 1 2119 0 is_stmt 1
 567 0024 2A68     		ldr	r2, [r5]
 568 0026 D368     		ldr	r3, [r2, #12]
 569 0028 23F4D073 		bic	r3, r3, #416
 570 002c D360     		str	r3, [r2, #12]
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 571              		.loc 1 2120 0
 572 002e 2A68     		ldr	r2, [r5]
 573 0030 5369     		ldr	r3, [r2, #20]
 574 0032 23F00103 		bic	r3, r3, #1
 575 0036 5361     		str	r3, [r2, #20]
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 576              		.loc 1 2122 0
 577 0038 2023     		movs	r3, #32
 578 003a 85F83930 		strb	r3, [r5, #57]
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 579              		.loc 1 2123 0
 580 003e 85F83A30 		strb	r3, [r5, #58]
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 581              		.loc 1 2126 0
 582 0042 0023     		movs	r3, #0
 583 0044 85F83830 		strb	r3, [r5, #56]
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 584              		.loc 1 2128 0
 585 0048 0320     		movs	r0, #3
 586 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 587              	.LVL51:
 588              	.L22:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 589              		.loc 1 2111 0
 590 004e 2B68     		ldr	r3, [r5]
 591 0050 1B68     		ldr	r3, [r3]
 592 0052 37EA0303 		bics	r3, r7, r3
 593 0056 0CBF     		ite	eq
 594 0058 0123     		moveq	r3, #1
 595 005a 0023     		movne	r3, #0
 596 005c B342     		cmp	r3, r6
 597 005e D7D0     		beq	.L25
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 598              		.loc 1 2133 0
 599 0060 0020     		movs	r0, #0
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600              		.loc 1 2134 0
 601 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 602              		.cfi_endproc
 603              	.LFE167:
 605 0066 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 606              		.align	2
 607              		.weak	HAL_UART_MspInit
 608              		.thumb
 609              		.thumb_func
 611              	HAL_UART_MspInit:
 612              	.LFB129:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 56


 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 613              		.loc 1 528 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618              	.LVL52:
 619 0000 7047     		bx	lr
 620              		.cfi_endproc
 621              	.LFE129:
 623 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 624              		.align	2
 625              		.global	HAL_UART_Init
 626              		.thumb
 627              		.thumb_func
 629              	HAL_UART_Init:
 630              	.LFB124:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 631              		.loc 1 245 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL53:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 636              		.loc 1 247 0
 637 0000 68B3     		cbz	r0, .L31
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 638              		.loc 1 245 0
 639 0002 10B5     		push	{r4, lr}
 640              	.LCFI2:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 644 0004 0446     		mov	r4, r0
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 645              		.loc 1 266 0
 646 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 647 000a 13F0FF0F 		tst	r3, #255
 648 000e 04D1     		bne	.L30
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 649              		.loc 1 269 0
 650 0010 0023     		movs	r3, #0
 651 0012 80F83830 		strb	r3, [r0, #56]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 652              		.loc 1 271 0
 653 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 654              	.LVL54:
 655              	.L30:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 656              		.loc 1 274 0
 657 001a 2423     		movs	r3, #36
 658 001c 84F83930 		strb	r3, [r4, #57]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 659              		.loc 1 277 0
 660 0020 2268     		ldr	r2, [r4]
 661 0022 D368     		ldr	r3, [r2, #12]
 662 0024 23F40053 		bic	r3, r3, #8192
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 57


 663 0028 D360     		str	r3, [r2, #12]
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 664              		.loc 1 280 0
 665 002a 2046     		mov	r0, r4
 666 002c FFF7FEFF 		bl	UART_SetConfig
 667              	.LVL55:
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 668              		.loc 1 285 0
 669 0030 2268     		ldr	r2, [r4]
 670 0032 1369     		ldr	r3, [r2, #16]
 671 0034 23F49043 		bic	r3, r3, #18432
 672 0038 1361     		str	r3, [r2, #16]
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 673              		.loc 1 286 0
 674 003a 2268     		ldr	r2, [r4]
 675 003c 5369     		ldr	r3, [r2, #20]
 676 003e 23F02A03 		bic	r3, r3, #42
 677 0042 5361     		str	r3, [r2, #20]
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 678              		.loc 1 289 0
 679 0044 2268     		ldr	r2, [r4]
 680 0046 D368     		ldr	r3, [r2, #12]
 681 0048 43F40053 		orr	r3, r3, #8192
 682 004c D360     		str	r3, [r2, #12]
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 683              		.loc 1 292 0
 684 004e 0020     		movs	r0, #0
 685 0050 E063     		str	r0, [r4, #60]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 686              		.loc 1 293 0
 687 0052 2023     		movs	r3, #32
 688 0054 84F83930 		strb	r3, [r4, #57]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 689              		.loc 1 294 0
 690 0058 84F83A30 		strb	r3, [r4, #58]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 691              		.loc 1 296 0
 692 005c 10BD     		pop	{r4, pc}
 693              	.LVL56:
 694              	.L31:
 695              	.LCFI3:
 696              		.cfi_def_cfa_offset 0
 697              		.cfi_restore 4
 698              		.cfi_restore 14
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 699              		.loc 1 249 0
 700 005e 0120     		movs	r0, #1
 701              	.LVL57:
 702 0060 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE124:
 706 0062 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 707              		.align	2
 708              		.global	HAL_HalfDuplex_Init
 709              		.thumb
 710              		.thumb_func
 712              	HAL_HalfDuplex_Init:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 58


 713              	.LFB125:
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 714              		.loc 1 307 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              	.LVL58:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719              		.loc 1 309 0
 720 0000 0028     		cmp	r0, #0
 721 0002 32D0     		beq	.L37
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 722              		.loc 1 307 0
 723 0004 10B5     		push	{r4, lr}
 724              	.LCFI4:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 728 0006 0446     		mov	r4, r0
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 729              		.loc 1 319 0
 730 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 731 000c 13F0FF0F 		tst	r3, #255
 732 0010 04D1     		bne	.L36
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 733              		.loc 1 322 0
 734 0012 0023     		movs	r3, #0
 735 0014 80F83830 		strb	r3, [r0, #56]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 736              		.loc 1 324 0
 737 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 738              	.LVL59:
 739              	.L36:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 740              		.loc 1 327 0
 741 001c 2423     		movs	r3, #36
 742 001e 84F83930 		strb	r3, [r4, #57]
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 743              		.loc 1 330 0
 744 0022 2268     		ldr	r2, [r4]
 745 0024 D368     		ldr	r3, [r2, #12]
 746 0026 23F40053 		bic	r3, r3, #8192
 747 002a D360     		str	r3, [r2, #12]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 748              		.loc 1 333 0
 749 002c 2046     		mov	r0, r4
 750 002e FFF7FEFF 		bl	UART_SetConfig
 751              	.LVL60:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 752              		.loc 1 338 0
 753 0032 2268     		ldr	r2, [r4]
 754 0034 1369     		ldr	r3, [r2, #16]
 755 0036 23F49043 		bic	r3, r3, #18432
 756 003a 1361     		str	r3, [r2, #16]
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 757              		.loc 1 339 0
 758 003c 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 59


 759 003e 5369     		ldr	r3, [r2, #20]
 760 0040 23F02203 		bic	r3, r3, #34
 761 0044 5361     		str	r3, [r2, #20]
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 762              		.loc 1 342 0
 763 0046 2268     		ldr	r2, [r4]
 764 0048 5369     		ldr	r3, [r2, #20]
 765 004a 43F00803 		orr	r3, r3, #8
 766 004e 5361     		str	r3, [r2, #20]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 767              		.loc 1 345 0
 768 0050 2268     		ldr	r2, [r4]
 769 0052 D368     		ldr	r3, [r2, #12]
 770 0054 43F40053 		orr	r3, r3, #8192
 771 0058 D360     		str	r3, [r2, #12]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 772              		.loc 1 348 0
 773 005a 0020     		movs	r0, #0
 774 005c E063     		str	r0, [r4, #60]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 775              		.loc 1 349 0
 776 005e 2023     		movs	r3, #32
 777 0060 84F83930 		strb	r3, [r4, #57]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 778              		.loc 1 350 0
 779 0064 84F83A30 		strb	r3, [r4, #58]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 780              		.loc 1 352 0
 781 0068 10BD     		pop	{r4, pc}
 782              	.LVL61:
 783              	.L37:
 784              	.LCFI5:
 785              		.cfi_def_cfa_offset 0
 786              		.cfi_restore 4
 787              		.cfi_restore 14
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 788              		.loc 1 311 0
 789 006a 0120     		movs	r0, #1
 790              	.LVL62:
 791 006c 7047     		bx	lr
 792              		.cfi_endproc
 793              	.LFE125:
 795 006e 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 796              		.align	2
 797              		.global	HAL_LIN_Init
 798              		.thumb
 799              		.thumb_func
 801              	HAL_LIN_Init:
 802              	.LFB126:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 803              		.loc 1 367 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              	.LVL63:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 808              		.loc 1 369 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 60


 809 0000 0028     		cmp	r0, #0
 810 0002 3CD0     		beq	.L43
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 811              		.loc 1 367 0
 812 0004 38B5     		push	{r3, r4, r5, lr}
 813              	.LCFI6:
 814              		.cfi_def_cfa_offset 16
 815              		.cfi_offset 3, -16
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 5, -8
 818              		.cfi_offset 14, -4
 819 0006 0446     		mov	r4, r0
 820 0008 0D46     		mov	r5, r1
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 821              		.loc 1 380 0
 822 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 823 000e 13F0FF0F 		tst	r3, #255
 824 0012 04D1     		bne	.L42
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 825              		.loc 1 383 0
 826 0014 0023     		movs	r3, #0
 827 0016 80F83830 		strb	r3, [r0, #56]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 828              		.loc 1 385 0
 829 001a FFF7FEFF 		bl	HAL_UART_MspInit
 830              	.LVL64:
 831              	.L42:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 832              		.loc 1 388 0
 833 001e 2423     		movs	r3, #36
 834 0020 84F83930 		strb	r3, [r4, #57]
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 835              		.loc 1 391 0
 836 0024 2268     		ldr	r2, [r4]
 837 0026 D368     		ldr	r3, [r2, #12]
 838 0028 23F40053 		bic	r3, r3, #8192
 839 002c D360     		str	r3, [r2, #12]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 840              		.loc 1 394 0
 841 002e 2046     		mov	r0, r4
 842 0030 FFF7FEFF 		bl	UART_SetConfig
 843              	.LVL65:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 844              		.loc 1 399 0
 845 0034 2268     		ldr	r2, [r4]
 846 0036 1369     		ldr	r3, [r2, #16]
 847 0038 23F40063 		bic	r3, r3, #2048
 848 003c 1361     		str	r3, [r2, #16]
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 849              		.loc 1 400 0
 850 003e 2268     		ldr	r2, [r4]
 851 0040 5369     		ldr	r3, [r2, #20]
 852 0042 23F02A03 		bic	r3, r3, #42
 853 0046 5361     		str	r3, [r2, #20]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 854              		.loc 1 403 0
 855 0048 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 61


 856 004a 1369     		ldr	r3, [r2, #16]
 857 004c 43F48043 		orr	r3, r3, #16384
 858 0050 1361     		str	r3, [r2, #16]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 859              		.loc 1 406 0
 860 0052 2268     		ldr	r2, [r4]
 861 0054 1369     		ldr	r3, [r2, #16]
 862 0056 23F02003 		bic	r3, r3, #32
 863 005a 1361     		str	r3, [r2, #16]
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 864              		.loc 1 407 0
 865 005c 2368     		ldr	r3, [r4]
 866 005e 1969     		ldr	r1, [r3, #16]
 867 0060 0D43     		orrs	r5, r5, r1
 868              	.LVL66:
 869 0062 1D61     		str	r5, [r3, #16]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 870              		.loc 1 410 0
 871 0064 2268     		ldr	r2, [r4]
 872 0066 D368     		ldr	r3, [r2, #12]
 873 0068 43F40053 		orr	r3, r3, #8192
 874 006c D360     		str	r3, [r2, #12]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 875              		.loc 1 413 0
 876 006e 0020     		movs	r0, #0
 877 0070 E063     		str	r0, [r4, #60]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 878              		.loc 1 414 0
 879 0072 2023     		movs	r3, #32
 880 0074 84F83930 		strb	r3, [r4, #57]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 881              		.loc 1 415 0
 882 0078 84F83A30 		strb	r3, [r4, #58]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 883              		.loc 1 417 0
 884 007c 38BD     		pop	{r3, r4, r5, pc}
 885              	.LVL67:
 886              	.L43:
 887              	.LCFI7:
 888              		.cfi_def_cfa_offset 0
 889              		.cfi_restore 3
 890              		.cfi_restore 4
 891              		.cfi_restore 5
 892              		.cfi_restore 14
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 893              		.loc 1 371 0
 894 007e 0120     		movs	r0, #1
 895              	.LVL68:
 896 0080 7047     		bx	lr
 897              		.cfi_endproc
 898              	.LFE126:
 900 0082 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 901              		.align	2
 902              		.global	HAL_MultiProcessor_Init
 903              		.thumb
 904              		.thumb_func
 906              	HAL_MultiProcessor_Init:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 62


 907              	.LFB127:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 908              		.loc 1 433 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              	.LVL69:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 913              		.loc 1 435 0
 914 0000 0028     		cmp	r0, #0
 915 0002 41D0     		beq	.L49
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 916              		.loc 1 433 0
 917 0004 70B5     		push	{r4, r5, r6, lr}
 918              	.LCFI8:
 919              		.cfi_def_cfa_offset 16
 920              		.cfi_offset 4, -16
 921              		.cfi_offset 5, -12
 922              		.cfi_offset 6, -8
 923              		.cfi_offset 14, -4
 924 0006 0446     		mov	r4, r0
 925 0008 1546     		mov	r5, r2
 926 000a 0E46     		mov	r6, r1
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 927              		.loc 1 447 0
 928 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 929 0010 13F0FF0F 		tst	r3, #255
 930 0014 04D1     		bne	.L48
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 931              		.loc 1 450 0
 932 0016 0023     		movs	r3, #0
 933 0018 80F83830 		strb	r3, [r0, #56]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 934              		.loc 1 452 0
 935 001c FFF7FEFF 		bl	HAL_UART_MspInit
 936              	.LVL70:
 937              	.L48:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 938              		.loc 1 455 0
 939 0020 2423     		movs	r3, #36
 940 0022 84F83930 		strb	r3, [r4, #57]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 941              		.loc 1 458 0
 942 0026 2268     		ldr	r2, [r4]
 943 0028 D368     		ldr	r3, [r2, #12]
 944 002a 23F40053 		bic	r3, r3, #8192
 945 002e D360     		str	r3, [r2, #12]
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 946              		.loc 1 461 0
 947 0030 2046     		mov	r0, r4
 948 0032 FFF7FEFF 		bl	UART_SetConfig
 949              	.LVL71:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 950              		.loc 1 466 0
 951 0036 2268     		ldr	r2, [r4]
 952 0038 1369     		ldr	r3, [r2, #16]
 953 003a 23F49043 		bic	r3, r3, #18432
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 63


 954 003e 1361     		str	r3, [r2, #16]
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 955              		.loc 1 467 0
 956 0040 2268     		ldr	r2, [r4]
 957 0042 5369     		ldr	r3, [r2, #20]
 958 0044 23F02A03 		bic	r3, r3, #42
 959 0048 5361     		str	r3, [r2, #20]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 960              		.loc 1 470 0
 961 004a 2268     		ldr	r2, [r4]
 962 004c 1369     		ldr	r3, [r2, #16]
 963 004e 23F00F03 		bic	r3, r3, #15
 964 0052 1361     		str	r3, [r2, #16]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 965              		.loc 1 472 0
 966 0054 2368     		ldr	r3, [r4]
 967 0056 1969     		ldr	r1, [r3, #16]
 968 0058 0E43     		orrs	r6, r6, r1
 969 005a 1E61     		str	r6, [r3, #16]
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 970              		.loc 1 475 0
 971 005c 2268     		ldr	r2, [r4]
 972 005e D368     		ldr	r3, [r2, #12]
 973 0060 23F40063 		bic	r3, r3, #2048
 974 0064 D360     		str	r3, [r2, #12]
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 975              		.loc 1 476 0
 976 0066 2368     		ldr	r3, [r4]
 977 0068 DA68     		ldr	r2, [r3, #12]
 978 006a 1543     		orrs	r5, r5, r2
 979              	.LVL72:
 980 006c DD60     		str	r5, [r3, #12]
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 981              		.loc 1 479 0
 982 006e 2268     		ldr	r2, [r4]
 983 0070 D368     		ldr	r3, [r2, #12]
 984 0072 43F40053 		orr	r3, r3, #8192
 985 0076 D360     		str	r3, [r2, #12]
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 986              		.loc 1 482 0
 987 0078 0020     		movs	r0, #0
 988 007a E063     		str	r0, [r4, #60]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 989              		.loc 1 483 0
 990 007c 2023     		movs	r3, #32
 991 007e 84F83930 		strb	r3, [r4, #57]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 992              		.loc 1 484 0
 993 0082 84F83A30 		strb	r3, [r4, #58]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 994              		.loc 1 486 0
 995 0086 70BD     		pop	{r4, r5, r6, pc}
 996              	.LVL73:
 997              	.L49:
 998              	.LCFI9:
 999              		.cfi_def_cfa_offset 0
 1000              		.cfi_restore 4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 64


 1001              		.cfi_restore 5
 1002              		.cfi_restore 6
 1003              		.cfi_restore 14
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1004              		.loc 1 437 0
 1005 0088 0120     		movs	r0, #1
 1006              	.LVL74:
 1007 008a 7047     		bx	lr
 1008              		.cfi_endproc
 1009              	.LFE127:
 1011              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1012              		.align	2
 1013              		.weak	HAL_UART_MspDeInit
 1014              		.thumb
 1015              		.thumb_func
 1017              	HAL_UART_MspDeInit:
 1018              	.LFB130:
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1019              		.loc 1 543 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024              	.LVL75:
 1025 0000 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE130:
 1029 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1030              		.align	2
 1031              		.global	HAL_UART_DeInit
 1032              		.thumb
 1033              		.thumb_func
 1035              	HAL_UART_DeInit:
 1036              	.LFB128:
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1037              		.loc 1 496 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              	.LVL76:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1042              		.loc 1 498 0
 1043 0000 78B1     		cbz	r0, .L55
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1044              		.loc 1 496 0
 1045 0002 10B5     		push	{r4, lr}
 1046              	.LCFI10:
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
 1050 0004 0446     		mov	r4, r0
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1051              		.loc 1 506 0
 1052 0006 2423     		movs	r3, #36
 1053 0008 80F83930 		strb	r3, [r0, #57]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1054              		.loc 1 509 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 65


 1055 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 1056              	.LVL77:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1057              		.loc 1 511 0
 1058 0010 0020     		movs	r0, #0
 1059 0012 E063     		str	r0, [r4, #60]
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1060              		.loc 1 512 0
 1061 0014 84F83900 		strb	r0, [r4, #57]
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1062              		.loc 1 513 0
 1063 0018 84F83A00 		strb	r0, [r4, #58]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1064              		.loc 1 516 0
 1065 001c 84F83800 		strb	r0, [r4, #56]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1066              		.loc 1 518 0
 1067 0020 10BD     		pop	{r4, pc}
 1068              	.LVL78:
 1069              	.L55:
 1070              	.LCFI11:
 1071              		.cfi_def_cfa_offset 0
 1072              		.cfi_restore 4
 1073              		.cfi_restore 14
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1074              		.loc 1 500 0
 1075 0022 0120     		movs	r0, #1
 1076              	.LVL79:
 1077 0024 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE128:
 1081 0026 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1082              		.align	2
 1083              		.global	HAL_UART_Transmit
 1084              		.thumb
 1085              		.thumb_func
 1087              	HAL_UART_Transmit:
 1088              	.LFB131:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1089              		.loc 1 617 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL80:
 1094 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1095              	.LCFI12:
 1096              		.cfi_def_cfa_offset 24
 1097              		.cfi_offset 4, -24
 1098              		.cfi_offset 5, -20
 1099              		.cfi_offset 6, -16
 1100              		.cfi_offset 7, -12
 1101              		.cfi_offset 8, -8
 1102              		.cfi_offset 14, -4
 1103 0004 82B0     		sub	sp, sp, #8
 1104              	.LCFI13:
 1105              		.cfi_def_cfa_offset 32
 1106 0006 1E46     		mov	r6, r3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 66


 1107              	.LVL81:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1108              		.loc 1 622 0
 1109 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1110              	.LVL82:
 1111 000c DBB2     		uxtb	r3, r3
 1112 000e 202B     		cmp	r3, #32
 1113 0010 56D1     		bne	.L65
 1114 0012 0446     		mov	r4, r0
 1115 0014 0D46     		mov	r5, r1
 1116 0016 9046     		mov	r8, r2
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1117              		.loc 1 624 0
 1118 0018 0029     		cmp	r1, #0
 1119 001a 53D0     		beq	.L66
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1120              		.loc 1 624 0 is_stmt 0 discriminator 1
 1121 001c 002A     		cmp	r2, #0
 1122 001e 53D0     		beq	.L67
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1123              		.loc 1 630 0 is_stmt 1
 1124 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1125 0024 012B     		cmp	r3, #1
 1126 0026 51D0     		beq	.L68
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1127              		.loc 1 630 0 is_stmt 0 discriminator 2
 1128 0028 0123     		movs	r3, #1
 1129 002a 80F83830 		strb	r3, [r0, #56]
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1130              		.loc 1 632 0 is_stmt 1 discriminator 2
 1131 002e 0023     		movs	r3, #0
 1132 0030 C363     		str	r3, [r0, #60]
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1133              		.loc 1 633 0 discriminator 2
 1134 0032 2123     		movs	r3, #33
 1135 0034 80F83930 		strb	r3, [r0, #57]
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1136              		.loc 1 636 0 discriminator 2
 1137 0038 FFF7FEFF 		bl	HAL_GetTick
 1138              	.LVL83:
 1139 003c 0746     		mov	r7, r0
 1140              	.LVL84:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1141              		.loc 1 638 0 discriminator 2
 1142 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1143              		.loc 1 639 0 discriminator 2
 1144 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1145              		.loc 1 640 0 discriminator 2
 1146 0046 27E0     		b	.L60
 1147              	.LVL85:
 1148              	.L64:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1149              		.loc 1 642 0
 1150 0048 E38C     		ldrh	r3, [r4, #38]
 1151 004a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 67


 1152 004c 013B     		subs	r3, r3, #1
 1153 004e 9BB2     		uxth	r3, r3
 1154 0050 E384     		strh	r3, [r4, #38]	@ movhi
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1155              		.loc 1 643 0
 1156 0052 A368     		ldr	r3, [r4, #8]
 1157 0054 B3F5805F 		cmp	r3, #4096
 1158 0058 12D1     		bne	.L61
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1159              		.loc 1 645 0
 1160 005a 0096     		str	r6, [sp]
 1161 005c 3B46     		mov	r3, r7
 1162 005e 0022     		movs	r2, #0
 1163 0060 8021     		movs	r1, #128
 1164 0062 2046     		mov	r0, r4
 1165 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1166              	.LVL86:
 1167 0068 90BB     		cbnz	r0, .L69
 1168              	.LVL87:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1169              		.loc 1 650 0
 1170 006a 2268     		ldr	r2, [r4]
 1171 006c 2B88     		ldrh	r3, [r5]
 1172 006e C3F30803 		ubfx	r3, r3, #0, #9
 1173 0072 5360     		str	r3, [r2, #4]
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1174              		.loc 1 651 0
 1175 0074 2369     		ldr	r3, [r4, #16]
 1176 0076 0BB9     		cbnz	r3, .L62
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1177              		.loc 1 653 0
 1178 0078 0235     		adds	r5, r5, #2
 1179              	.LVL88:
 1180 007a 0DE0     		b	.L60
 1181              	.LVL89:
 1182              	.L62:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1183              		.loc 1 657 0
 1184 007c 0135     		adds	r5, r5, #1
 1185              	.LVL90:
 1186 007e 0BE0     		b	.L60
 1187              	.LVL91:
 1188              	.L61:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1189              		.loc 1 662 0
 1190 0080 0096     		str	r6, [sp]
 1191 0082 3B46     		mov	r3, r7
 1192 0084 0022     		movs	r2, #0
 1193 0086 8021     		movs	r1, #128
 1194 0088 2046     		mov	r0, r4
 1195 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1196              	.LVL92:
 1197 008e 08BB     		cbnz	r0, .L70
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 1198              		.loc 1 666 0
 1199 0090 2368     		ldr	r3, [r4]
 1200              	.LVL93:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 68


 1201 0092 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1202 0094 5A60     		str	r2, [r3, #4]
 1203 0096 0135     		adds	r5, r5, #1
 1204              	.LVL94:
 1205              	.L60:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1206              		.loc 1 640 0
 1207 0098 E38C     		ldrh	r3, [r4, #38]
 1208 009a 9BB2     		uxth	r3, r3
 1209 009c 002B     		cmp	r3, #0
 1210 009e D3D1     		bne	.L64
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 1211              		.loc 1 670 0
 1212 00a0 0096     		str	r6, [sp]
 1213 00a2 3B46     		mov	r3, r7
 1214 00a4 0022     		movs	r2, #0
 1215 00a6 4021     		movs	r1, #64
 1216 00a8 2046     		mov	r0, r4
 1217 00aa FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1218              	.LVL95:
 1219 00ae 0346     		mov	r3, r0
 1220 00b0 90B9     		cbnz	r0, .L71
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1221              		.loc 1 676 0
 1222 00b2 2022     		movs	r2, #32
 1223 00b4 84F83920 		strb	r2, [r4, #57]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1224              		.loc 1 679 0
 1225 00b8 0022     		movs	r2, #0
 1226 00ba 84F83820 		strb	r2, [r4, #56]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1227              		.loc 1 681 0
 1228 00be 0CE0     		b	.L59
 1229              	.LVL96:
 1230              	.L65:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1231              		.loc 1 685 0
 1232 00c0 0223     		movs	r3, #2
 1233 00c2 0AE0     		b	.L59
 1234              	.L66:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1235              		.loc 1 626 0
 1236 00c4 0123     		movs	r3, #1
 1237 00c6 08E0     		b	.L59
 1238              	.L67:
 1239 00c8 0123     		movs	r3, #1
 1240 00ca 06E0     		b	.L59
 1241              	.L68:
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1242              		.loc 1 630 0
 1243 00cc 0223     		movs	r3, #2
 1244 00ce 04E0     		b	.L59
 1245              	.LVL97:
 1246              	.L69:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1247              		.loc 1 647 0
 1248 00d0 0323     		movs	r3, #3
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 69


 1249 00d2 02E0     		b	.L59
 1250              	.L70:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1251              		.loc 1 664 0
 1252 00d4 0323     		movs	r3, #3
 1253 00d6 00E0     		b	.L59
 1254              	.L71:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1255              		.loc 1 672 0
 1256 00d8 0323     		movs	r3, #3
 1257              	.LVL98:
 1258              	.L59:
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1259              		.loc 1 687 0
 1260 00da 1846     		mov	r0, r3
 1261 00dc 02B0     		add	sp, sp, #8
 1262              	.LCFI14:
 1263              		.cfi_def_cfa_offset 24
 1264              		@ sp needed
 1265 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1266              		.cfi_endproc
 1267              	.LFE131:
 1269 00e2 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 1270              		.align	2
 1271              		.global	HAL_UART_Receive
 1272              		.thumb
 1273              		.thumb_func
 1275              	HAL_UART_Receive:
 1276              	.LFB132:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1277              		.loc 1 699 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              	.LVL99:
 1282 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1283              	.LCFI15:
 1284              		.cfi_def_cfa_offset 24
 1285              		.cfi_offset 4, -24
 1286              		.cfi_offset 5, -20
 1287              		.cfi_offset 6, -16
 1288              		.cfi_offset 7, -12
 1289              		.cfi_offset 8, -8
 1290              		.cfi_offset 14, -4
 1291 0004 82B0     		sub	sp, sp, #8
 1292              	.LCFI16:
 1293              		.cfi_def_cfa_offset 32
 1294 0006 1E46     		mov	r6, r3
 1295              	.LVL100:
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1296              		.loc 1 704 0
 1297 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1298              	.LVL101:
 1299 000c DBB2     		uxtb	r3, r3
 1300 000e 202B     		cmp	r3, #32
 1301 0010 5BD1     		bne	.L81
 1302 0012 0446     		mov	r4, r0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 70


 1303 0014 0D46     		mov	r5, r1
 1304 0016 9046     		mov	r8, r2
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1305              		.loc 1 706 0
 1306 0018 0029     		cmp	r1, #0
 1307 001a 58D0     		beq	.L82
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1308              		.loc 1 706 0 is_stmt 0 discriminator 1
 1309 001c 002A     		cmp	r2, #0
 1310 001e 58D0     		beq	.L83
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1311              		.loc 1 712 0 is_stmt 1
 1312 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1313 0024 012B     		cmp	r3, #1
 1314 0026 56D0     		beq	.L84
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1315              		.loc 1 712 0 is_stmt 0 discriminator 2
 1316 0028 0123     		movs	r3, #1
 1317 002a 80F83830 		strb	r3, [r0, #56]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1318              		.loc 1 714 0 is_stmt 1 discriminator 2
 1319 002e 0023     		movs	r3, #0
 1320 0030 C363     		str	r3, [r0, #60]
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1321              		.loc 1 715 0 discriminator 2
 1322 0032 2223     		movs	r3, #34
 1323 0034 80F83A30 		strb	r3, [r0, #58]
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1324              		.loc 1 718 0 discriminator 2
 1325 0038 FFF7FEFF 		bl	HAL_GetTick
 1326              	.LVL102:
 1327 003c 0746     		mov	r7, r0
 1328              	.LVL103:
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1329              		.loc 1 720 0 discriminator 2
 1330 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1331              		.loc 1 721 0 discriminator 2
 1332 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1333              		.loc 1 724 0 discriminator 2
 1334 0046 35E0     		b	.L75
 1335              	.LVL104:
 1336              	.L80:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1337              		.loc 1 726 0
 1338 0048 E38D     		ldrh	r3, [r4, #46]
 1339 004a 9BB2     		uxth	r3, r3
 1340 004c 013B     		subs	r3, r3, #1
 1341 004e 9BB2     		uxth	r3, r3
 1342 0050 E385     		strh	r3, [r4, #46]	@ movhi
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1343              		.loc 1 727 0
 1344 0052 A368     		ldr	r3, [r4, #8]
 1345 0054 B3F5805F 		cmp	r3, #4096
 1346 0058 17D1     		bne	.L76
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 71


 1347              		.loc 1 729 0
 1348 005a 0096     		str	r6, [sp]
 1349 005c 3B46     		mov	r3, r7
 1350 005e 0022     		movs	r2, #0
 1351 0060 2021     		movs	r1, #32
 1352 0062 2046     		mov	r0, r4
 1353 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1354              	.LVL105:
 1355 0068 0028     		cmp	r0, #0
 1356 006a 36D1     		bne	.L85
 1357              	.LVL106:
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1358              		.loc 1 734 0
 1359 006c 2369     		ldr	r3, [r4, #16]
 1360 006e 33B9     		cbnz	r3, .L77
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1361              		.loc 1 736 0
 1362 0070 2368     		ldr	r3, [r4]
 1363 0072 5B68     		ldr	r3, [r3, #4]
 1364 0074 C3F30803 		ubfx	r3, r3, #0, #9
 1365 0078 25F8023B 		strh	r3, [r5], #2	@ movhi
 1366              	.LVL107:
 1367 007c 1AE0     		b	.L75
 1368              	.LVL108:
 1369              	.L77:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1370              		.loc 1 741 0
 1371 007e 2368     		ldr	r3, [r4]
 1372 0080 5B68     		ldr	r3, [r3, #4]
 1373 0082 DBB2     		uxtb	r3, r3
 1374 0084 25F8013B 		strh	r3, [r5], #1	@ movhi
 1375              	.LVL109:
 1376 0088 14E0     		b	.L75
 1377              	.LVL110:
 1378              	.L76:
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1379              		.loc 1 748 0
 1380 008a 0096     		str	r6, [sp]
 1381 008c 3B46     		mov	r3, r7
 1382 008e 0022     		movs	r2, #0
 1383 0090 2021     		movs	r1, #32
 1384 0092 2046     		mov	r0, r4
 1385 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1386              	.LVL111:
 1387 0098 08BB     		cbnz	r0, .L86
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1388              		.loc 1 752 0
 1389 009a 2369     		ldr	r3, [r4, #16]
 1390 009c 23B9     		cbnz	r3, .L79
 1391              	.LVL112:
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1392              		.loc 1 754 0
 1393 009e 2368     		ldr	r3, [r4]
 1394 00a0 5B68     		ldr	r3, [r3, #4]
 1395 00a2 2B70     		strb	r3, [r5]
 1396 00a4 0135     		adds	r5, r5, #1
 1397              	.LVL113:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 72


 1398 00a6 05E0     		b	.L75
 1399              	.L79:
 1400              	.LVL114:
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1401              		.loc 1 758 0
 1402 00a8 2368     		ldr	r3, [r4]
 1403 00aa 5B68     		ldr	r3, [r3, #4]
 1404 00ac 03F07F03 		and	r3, r3, #127
 1405 00b0 2B70     		strb	r3, [r5]
 1406 00b2 0135     		adds	r5, r5, #1
 1407              	.LVL115:
 1408              	.L75:
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1409              		.loc 1 724 0
 1410 00b4 E38D     		ldrh	r3, [r4, #46]
 1411 00b6 9BB2     		uxth	r3, r3
 1412 00b8 002B     		cmp	r3, #0
 1413 00ba C5D1     		bne	.L80
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1414              		.loc 1 765 0
 1415 00bc 2023     		movs	r3, #32
 1416 00be 84F83A30 		strb	r3, [r4, #58]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1417              		.loc 1 768 0
 1418 00c2 0020     		movs	r0, #0
 1419 00c4 84F83800 		strb	r0, [r4, #56]
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1420              		.loc 1 770 0
 1421 00c8 0AE0     		b	.L74
 1422              	.LVL116:
 1423              	.L81:
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1424              		.loc 1 774 0
 1425 00ca 0220     		movs	r0, #2
 1426              	.LVL117:
 1427 00cc 08E0     		b	.L74
 1428              	.LVL118:
 1429              	.L82:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1430              		.loc 1 708 0
 1431 00ce 0120     		movs	r0, #1
 1432              	.LVL119:
 1433 00d0 06E0     		b	.L74
 1434              	.LVL120:
 1435              	.L83:
 1436 00d2 0120     		movs	r0, #1
 1437              	.LVL121:
 1438 00d4 04E0     		b	.L74
 1439              	.LVL122:
 1440              	.L84:
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1441              		.loc 1 712 0
 1442 00d6 0220     		movs	r0, #2
 1443              	.LVL123:
 1444 00d8 02E0     		b	.L74
 1445              	.LVL124:
 1446              	.L85:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 73


 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1447              		.loc 1 731 0
 1448 00da 0320     		movs	r0, #3
 1449 00dc 00E0     		b	.L74
 1450              	.L86:
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1451              		.loc 1 750 0
 1452 00de 0320     		movs	r0, #3
 1453              	.LVL125:
 1454              	.L74:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1455              		.loc 1 776 0
 1456 00e0 02B0     		add	sp, sp, #8
 1457              	.LCFI17:
 1458              		.cfi_def_cfa_offset 24
 1459              		@ sp needed
 1460 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1461              		.cfi_endproc
 1462              	.LFE132:
 1464              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1465              		.align	2
 1466              		.global	HAL_UART_Transmit_IT
 1467              		.thumb
 1468              		.thumb_func
 1470              	HAL_UART_Transmit_IT:
 1471              	.LFB133:
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1472              		.loc 1 787 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477              	.LVL126:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1478              		.loc 1 789 0
 1479 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1480 0004 DBB2     		uxtb	r3, r3
 1481 0006 202B     		cmp	r3, #32
 1482 0008 16D1     		bne	.L90
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1483              		.loc 1 791 0
 1484 000a B9B1     		cbz	r1, .L91
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1485              		.loc 1 791 0 is_stmt 0 discriminator 1
 1486 000c C2B1     		cbz	r2, .L92
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1487              		.loc 1 797 0 is_stmt 1
 1488 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1489 0012 012B     		cmp	r3, #1
 1490 0014 16D0     		beq	.L93
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1491              		.loc 1 799 0 discriminator 2
 1492 0016 0162     		str	r1, [r0, #32]
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1493              		.loc 1 800 0 discriminator 2
 1494 0018 8284     		strh	r2, [r0, #36]	@ movhi
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 74


 1495              		.loc 1 801 0 discriminator 2
 1496 001a C284     		strh	r2, [r0, #38]	@ movhi
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1497              		.loc 1 803 0 discriminator 2
 1498 001c 0023     		movs	r3, #0
 1499 001e C363     		str	r3, [r0, #60]
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1500              		.loc 1 804 0 discriminator 2
 1501 0020 2122     		movs	r2, #33
 1502              	.LVL127:
 1503 0022 80F83920 		strb	r2, [r0, #57]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1504              		.loc 1 807 0 discriminator 2
 1505 0026 80F83830 		strb	r3, [r0, #56]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1506              		.loc 1 810 0 discriminator 2
 1507 002a 0168     		ldr	r1, [r0]
 1508              	.LVL128:
 1509 002c CA68     		ldr	r2, [r1, #12]
 1510 002e 42F08002 		orr	r2, r2, #128
 1511 0032 CA60     		str	r2, [r1, #12]
 1512              	.LVL129:
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1513              		.loc 1 812 0 discriminator 2
 1514 0034 1846     		mov	r0, r3
 1515              	.LVL130:
 1516 0036 7047     		bx	lr
 1517              	.LVL131:
 1518              	.L90:
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1519              		.loc 1 816 0
 1520 0038 0220     		movs	r0, #2
 1521              	.LVL132:
 1522 003a 7047     		bx	lr
 1523              	.LVL133:
 1524              	.L91:
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1525              		.loc 1 793 0
 1526 003c 0120     		movs	r0, #1
 1527              	.LVL134:
 1528 003e 7047     		bx	lr
 1529              	.LVL135:
 1530              	.L92:
 1531 0040 0120     		movs	r0, #1
 1532              	.LVL136:
 1533 0042 7047     		bx	lr
 1534              	.LVL137:
 1535              	.L93:
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1536              		.loc 1 797 0
 1537 0044 0220     		movs	r0, #2
 1538              	.LVL138:
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1539              		.loc 1 818 0
 1540 0046 7047     		bx	lr
 1541              		.cfi_endproc
 1542              	.LFE133:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 75


 1544              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1545              		.align	2
 1546              		.global	HAL_UART_Receive_IT
 1547              		.thumb
 1548              		.thumb_func
 1550              	HAL_UART_Receive_IT:
 1551              	.LFB134:
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1552              		.loc 1 829 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
 1557              	.LVL139:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1558              		.loc 1 831 0
 1559 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1560 0004 DBB2     		uxtb	r3, r3
 1561 0006 202B     		cmp	r3, #32
 1562 0008 1BD1     		bne	.L96
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1563              		.loc 1 833 0
 1564 000a E1B1     		cbz	r1, .L97
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1565              		.loc 1 833 0 is_stmt 0 discriminator 1
 1566 000c EAB1     		cbz	r2, .L98
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1567              		.loc 1 839 0 is_stmt 1
 1568 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1569 0012 012B     		cmp	r3, #1
 1570 0014 1BD0     		beq	.L99
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1571              		.loc 1 841 0 discriminator 2
 1572 0016 8162     		str	r1, [r0, #40]
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1573              		.loc 1 842 0 discriminator 2
 1574 0018 8285     		strh	r2, [r0, #44]	@ movhi
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1575              		.loc 1 843 0 discriminator 2
 1576 001a C285     		strh	r2, [r0, #46]	@ movhi
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1577              		.loc 1 845 0 discriminator 2
 1578 001c 0023     		movs	r3, #0
 1579 001e C363     		str	r3, [r0, #60]
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1580              		.loc 1 846 0 discriminator 2
 1581 0020 2222     		movs	r2, #34
 1582              	.LVL140:
 1583 0022 80F83A20 		strb	r2, [r0, #58]
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1584              		.loc 1 849 0 discriminator 2
 1585 0026 80F83830 		strb	r3, [r0, #56]
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1586              		.loc 1 852 0 discriminator 2
 1587 002a 0168     		ldr	r1, [r0]
 1588              	.LVL141:
 1589 002c 4A69     		ldr	r2, [r1, #20]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 76


 1590 002e 42F00102 		orr	r2, r2, #1
 1591 0032 4A61     		str	r2, [r1, #20]
 1592              	.LVL142:
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1593              		.loc 1 855 0 discriminator 2
 1594 0034 0168     		ldr	r1, [r0]
 1595 0036 CA68     		ldr	r2, [r1, #12]
 1596 0038 42F49072 		orr	r2, r2, #288
 1597 003c CA60     		str	r2, [r1, #12]
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1598              		.loc 1 857 0 discriminator 2
 1599 003e 1846     		mov	r0, r3
 1600              	.LVL143:
 1601 0040 7047     		bx	lr
 1602              	.LVL144:
 1603              	.L96:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1604              		.loc 1 861 0
 1605 0042 0220     		movs	r0, #2
 1606              	.LVL145:
 1607 0044 7047     		bx	lr
 1608              	.LVL146:
 1609              	.L97:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1610              		.loc 1 835 0
 1611 0046 0120     		movs	r0, #1
 1612              	.LVL147:
 1613 0048 7047     		bx	lr
 1614              	.LVL148:
 1615              	.L98:
 1616 004a 0120     		movs	r0, #1
 1617              	.LVL149:
 1618 004c 7047     		bx	lr
 1619              	.LVL150:
 1620              	.L99:
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1621              		.loc 1 839 0
 1622 004e 0220     		movs	r0, #2
 1623              	.LVL151:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1624              		.loc 1 863 0
 1625 0050 7047     		bx	lr
 1626              		.cfi_endproc
 1627              	.LFE134:
 1629 0052 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1630              		.align	2
 1631              		.global	HAL_UART_Transmit_DMA
 1632              		.thumb
 1633              		.thumb_func
 1635              	HAL_UART_Transmit_DMA:
 1636              	.LFB135:
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1637              		.loc 1 874 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              	.LVL152:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 77


 1642 0000 38B5     		push	{r3, r4, r5, lr}
 1643              	.LCFI18:
 1644              		.cfi_def_cfa_offset 16
 1645              		.cfi_offset 3, -16
 1646              		.cfi_offset 4, -12
 1647              		.cfi_offset 5, -8
 1648              		.cfi_offset 14, -4
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1649              		.loc 1 878 0
 1650 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1651 0006 E4B2     		uxtb	r4, r4
 1652 0008 202C     		cmp	r4, #32
 1653 000a 31D1     		bne	.L102
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1654              		.loc 1 880 0
 1655 000c 0029     		cmp	r1, #0
 1656 000e 31D0     		beq	.L103
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1657              		.loc 1 880 0 is_stmt 0 discriminator 1
 1658 0010 002A     		cmp	r2, #0
 1659 0012 31D0     		beq	.L104
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1660              		.loc 1 886 0 is_stmt 1
 1661 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1662 0018 012B     		cmp	r3, #1
 1663 001a 2FD0     		beq	.L105
 1664 001c 1346     		mov	r3, r2
 1665 001e 0446     		mov	r4, r0
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1666              		.loc 1 886 0 is_stmt 0 discriminator 2
 1667 0020 0122     		movs	r2, #1
 1668              	.LVL153:
 1669 0022 80F83820 		strb	r2, [r0, #56]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1670              		.loc 1 888 0 is_stmt 1 discriminator 2
 1671 0026 0162     		str	r1, [r0, #32]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1672              		.loc 1 889 0 discriminator 2
 1673 0028 8384     		strh	r3, [r0, #36]	@ movhi
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1674              		.loc 1 890 0 discriminator 2
 1675 002a C384     		strh	r3, [r0, #38]	@ movhi
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1676              		.loc 1 892 0 discriminator 2
 1677 002c 0025     		movs	r5, #0
 1678 002e C563     		str	r5, [r0, #60]
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1679              		.loc 1 893 0 discriminator 2
 1680 0030 2122     		movs	r2, #33
 1681 0032 80F83920 		strb	r2, [r0, #57]
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1682              		.loc 1 896 0 discriminator 2
 1683 0036 026B     		ldr	r2, [r0, #48]
 1684 0038 1148     		ldr	r0, .L107
 1685              	.LVL154:
 1686 003a D063     		str	r0, [r2, #60]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 78


 1687              		.loc 1 899 0 discriminator 2
 1688 003c 226B     		ldr	r2, [r4, #48]
 1689 003e 1148     		ldr	r0, .L107+4
 1690 0040 1064     		str	r0, [r2, #64]
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1691              		.loc 1 902 0 discriminator 2
 1692 0042 226B     		ldr	r2, [r4, #48]
 1693 0044 1048     		ldr	r0, .L107+8
 1694 0046 D064     		str	r0, [r2, #76]
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1695              		.loc 1 905 0 discriminator 2
 1696 0048 226B     		ldr	r2, [r4, #48]
 1697 004a 1565     		str	r5, [r2, #80]
 1698              	.LVL155:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1699              		.loc 1 909 0 discriminator 2
 1700 004c 2268     		ldr	r2, [r4]
 1701 004e 0432     		adds	r2, r2, #4
 1702 0050 206B     		ldr	r0, [r4, #48]
 1703 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1704              	.LVL156:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1705              		.loc 1 912 0 discriminator 2
 1706 0056 2368     		ldr	r3, [r4]
 1707 0058 6FF04002 		mvn	r2, #64
 1708 005c 1A60     		str	r2, [r3]
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1709              		.loc 1 915 0 discriminator 2
 1710 005e 84F83850 		strb	r5, [r4, #56]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1711              		.loc 1 919 0 discriminator 2
 1712 0062 2268     		ldr	r2, [r4]
 1713 0064 5369     		ldr	r3, [r2, #20]
 1714 0066 43F08003 		orr	r3, r3, #128
 1715 006a 5361     		str	r3, [r2, #20]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1716              		.loc 1 921 0 discriminator 2
 1717 006c 2846     		mov	r0, r5
 1718 006e 38BD     		pop	{r3, r4, r5, pc}
 1719              	.LVL157:
 1720              	.L102:
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1721              		.loc 1 925 0
 1722 0070 0220     		movs	r0, #2
 1723              	.LVL158:
 1724 0072 38BD     		pop	{r3, r4, r5, pc}
 1725              	.LVL159:
 1726              	.L103:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1727              		.loc 1 882 0
 1728 0074 0120     		movs	r0, #1
 1729              	.LVL160:
 1730 0076 38BD     		pop	{r3, r4, r5, pc}
 1731              	.LVL161:
 1732              	.L104:
 1733 0078 0120     		movs	r0, #1
 1734              	.LVL162:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 79


 1735 007a 38BD     		pop	{r3, r4, r5, pc}
 1736              	.LVL163:
 1737              	.L105:
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1738              		.loc 1 886 0
 1739 007c 0220     		movs	r0, #2
 1740              	.LVL164:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1741              		.loc 1 927 0
 1742 007e 38BD     		pop	{r3, r4, r5, pc}
 1743              	.L108:
 1744              		.align	2
 1745              	.L107:
 1746 0080 00000000 		.word	UART_DMATransmitCplt
 1747 0084 00000000 		.word	UART_DMATxHalfCplt
 1748 0088 00000000 		.word	UART_DMAError
 1749              		.cfi_endproc
 1750              	.LFE135:
 1752              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1753              		.align	2
 1754              		.global	HAL_UART_Receive_DMA
 1755              		.thumb
 1756              		.thumb_func
 1758              	HAL_UART_Receive_DMA:
 1759              	.LFB136:
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1760              		.loc 1 939 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 8
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL165:
 1765 0000 30B5     		push	{r4, r5, lr}
 1766              	.LCFI19:
 1767              		.cfi_def_cfa_offset 12
 1768              		.cfi_offset 4, -12
 1769              		.cfi_offset 5, -8
 1770              		.cfi_offset 14, -4
 1771 0002 83B0     		sub	sp, sp, #12
 1772              	.LCFI20:
 1773              		.cfi_def_cfa_offset 24
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1774              		.loc 1 943 0
 1775 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1776 0008 E4B2     		uxtb	r4, r4
 1777 000a 202C     		cmp	r4, #32
 1778 000c 3DD1     		bne	.L111
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1779              		.loc 1 945 0
 1780 000e 0029     		cmp	r1, #0
 1781 0010 3DD0     		beq	.L112
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1782              		.loc 1 945 0 is_stmt 0 discriminator 1
 1783 0012 002A     		cmp	r2, #0
 1784 0014 3DD0     		beq	.L113
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1785              		.loc 1 951 0 is_stmt 1
 1786 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 80


 1787 001a 012B     		cmp	r3, #1
 1788 001c 3BD0     		beq	.L114
 1789 001e 1346     		mov	r3, r2
 1790 0020 0A46     		mov	r2, r1
 1791              	.LVL166:
 1792 0022 0446     		mov	r4, r0
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1793              		.loc 1 951 0 is_stmt 0 discriminator 2
 1794 0024 0121     		movs	r1, #1
 1795              	.LVL167:
 1796 0026 80F83810 		strb	r1, [r0, #56]
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1797              		.loc 1 953 0 is_stmt 1 discriminator 2
 1798 002a 8262     		str	r2, [r0, #40]
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1799              		.loc 1 954 0 discriminator 2
 1800 002c 8385     		strh	r3, [r0, #44]	@ movhi
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1801              		.loc 1 956 0 discriminator 2
 1802 002e 0025     		movs	r5, #0
 1803 0030 C563     		str	r5, [r0, #60]
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1804              		.loc 1 957 0 discriminator 2
 1805 0032 2221     		movs	r1, #34
 1806 0034 80F83A10 		strb	r1, [r0, #58]
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1807              		.loc 1 960 0 discriminator 2
 1808 0038 416B     		ldr	r1, [r0, #52]
 1809 003a 1848     		ldr	r0, .L116
 1810              	.LVL168:
 1811 003c C863     		str	r0, [r1, #60]
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1812              		.loc 1 963 0 discriminator 2
 1813 003e 616B     		ldr	r1, [r4, #52]
 1814 0040 1748     		ldr	r0, .L116+4
 1815 0042 0864     		str	r0, [r1, #64]
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1816              		.loc 1 966 0 discriminator 2
 1817 0044 616B     		ldr	r1, [r4, #52]
 1818 0046 1748     		ldr	r0, .L116+8
 1819 0048 C864     		str	r0, [r1, #76]
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1820              		.loc 1 969 0 discriminator 2
 1821 004a 616B     		ldr	r1, [r4, #52]
 1822 004c 0D65     		str	r5, [r1, #80]
 1823              	.LVL169:
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1824              		.loc 1 973 0 discriminator 2
 1825 004e 2168     		ldr	r1, [r4]
 1826 0050 0431     		adds	r1, r1, #4
 1827 0052 606B     		ldr	r0, [r4, #52]
 1828 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1829              	.LVL170:
 1830              	.LBB2:
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1831              		.loc 1 976 0 discriminator 2
 1832 0058 0195     		str	r5, [sp, #4]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 81


 1833 005a 2368     		ldr	r3, [r4]
 1834 005c 1A68     		ldr	r2, [r3]
 1835 005e 0192     		str	r2, [sp, #4]
 1836 0060 5A68     		ldr	r2, [r3, #4]
 1837 0062 0192     		str	r2, [sp, #4]
 1838 0064 019A     		ldr	r2, [sp, #4]
 1839              	.LBE2:
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1840              		.loc 1 979 0 discriminator 2
 1841 0066 84F83850 		strb	r5, [r4, #56]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1842              		.loc 1 982 0 discriminator 2
 1843 006a DA68     		ldr	r2, [r3, #12]
 1844 006c 42F48072 		orr	r2, r2, #256
 1845 0070 DA60     		str	r2, [r3, #12]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1846              		.loc 1 985 0 discriminator 2
 1847 0072 2268     		ldr	r2, [r4]
 1848 0074 5369     		ldr	r3, [r2, #20]
 1849 0076 43F00103 		orr	r3, r3, #1
 1850 007a 5361     		str	r3, [r2, #20]
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1851              		.loc 1 989 0 discriminator 2
 1852 007c 2268     		ldr	r2, [r4]
 1853 007e 5369     		ldr	r3, [r2, #20]
 1854 0080 43F04003 		orr	r3, r3, #64
 1855 0084 5361     		str	r3, [r2, #20]
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1856              		.loc 1 991 0 discriminator 2
 1857 0086 2846     		mov	r0, r5
 1858 0088 06E0     		b	.L110
 1859              	.LVL171:
 1860              	.L111:
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1861              		.loc 1 995 0
 1862 008a 0220     		movs	r0, #2
 1863              	.LVL172:
 1864 008c 04E0     		b	.L110
 1865              	.LVL173:
 1866              	.L112:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1867              		.loc 1 947 0
 1868 008e 0120     		movs	r0, #1
 1869              	.LVL174:
 1870 0090 02E0     		b	.L110
 1871              	.LVL175:
 1872              	.L113:
 1873 0092 0120     		movs	r0, #1
 1874              	.LVL176:
 1875 0094 00E0     		b	.L110
 1876              	.LVL177:
 1877              	.L114:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1878              		.loc 1 951 0
 1879 0096 0220     		movs	r0, #2
 1880              	.LVL178:
 1881              	.L110:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 82


 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1882              		.loc 1 997 0
 1883 0098 03B0     		add	sp, sp, #12
 1884              	.LCFI21:
 1885              		.cfi_def_cfa_offset 12
 1886              		@ sp needed
 1887 009a 30BD     		pop	{r4, r5, pc}
 1888              	.L117:
 1889              		.align	2
 1890              	.L116:
 1891 009c 00000000 		.word	UART_DMAReceiveCplt
 1892 00a0 00000000 		.word	UART_DMARxHalfCplt
 1893 00a4 00000000 		.word	UART_DMAError
 1894              		.cfi_endproc
 1895              	.LFE136:
 1897              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1898              		.align	2
 1899              		.global	HAL_UART_DMAPause
 1900              		.thumb
 1901              		.thumb_func
 1903              	HAL_UART_DMAPause:
 1904              	.LFB137:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1905              		.loc 1 1006 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              		@ link register save eliminated.
 1910              	.LVL179:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1911              		.loc 1 1010 0
 1912 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1913 0004 012B     		cmp	r3, #1
 1914 0006 2DD0     		beq	.L122
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1915              		.loc 1 1010 0 is_stmt 0 discriminator 2
 1916 0008 0123     		movs	r3, #1
 1917 000a 80F83830 		strb	r3, [r0, #56]
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1918              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1919 000e 0168     		ldr	r1, [r0]
 1920 0010 4B69     		ldr	r3, [r1, #20]
 1921 0012 03F08002 		and	r2, r3, #128
 1922              	.LVL180:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1923              		.loc 1 1012 0 discriminator 2
 1924 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1925 001a DBB2     		uxtb	r3, r3
 1926 001c 212B     		cmp	r3, #33
 1927 001e 04D1     		bne	.L120
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1928              		.loc 1 1012 0 is_stmt 0 discriminator 1
 1929 0020 1AB1     		cbz	r2, .L120
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1930              		.loc 1 1015 0 is_stmt 1
 1931 0022 4B69     		ldr	r3, [r1, #20]
 1932 0024 23F08003 		bic	r3, r3, #128
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 83


 1933 0028 4B61     		str	r3, [r1, #20]
 1934              	.L120:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1935              		.loc 1 1017 0
 1936 002a 0168     		ldr	r1, [r0]
 1937 002c 4B69     		ldr	r3, [r1, #20]
 1938 002e 03F04002 		and	r2, r3, #64
 1939              	.LVL181:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1940              		.loc 1 1018 0
 1941 0032 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1942 0036 DBB2     		uxtb	r3, r3
 1943 0038 222B     		cmp	r3, #34
 1944 003a 0ED1     		bne	.L121
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1945              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1946 003c 6AB1     		cbz	r2, .L121
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1947              		.loc 1 1021 0 is_stmt 1
 1948 003e CB68     		ldr	r3, [r1, #12]
 1949 0040 23F48073 		bic	r3, r3, #256
 1950 0044 CB60     		str	r3, [r1, #12]
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1951              		.loc 1 1022 0
 1952 0046 0268     		ldr	r2, [r0]
 1953              	.LVL182:
 1954 0048 5369     		ldr	r3, [r2, #20]
 1955 004a 23F00103 		bic	r3, r3, #1
 1956 004e 5361     		str	r3, [r2, #20]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1957              		.loc 1 1025 0
 1958 0050 0268     		ldr	r2, [r0]
 1959 0052 5369     		ldr	r3, [r2, #20]
 1960 0054 23F04003 		bic	r3, r3, #64
 1961 0058 5361     		str	r3, [r2, #20]
 1962              	.L121:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1963              		.loc 1 1029 0
 1964 005a 0023     		movs	r3, #0
 1965 005c 80F83830 		strb	r3, [r0, #56]
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1966              		.loc 1 1031 0
 1967 0060 1846     		mov	r0, r3
 1968              	.LVL183:
 1969 0062 7047     		bx	lr
 1970              	.LVL184:
 1971              	.L122:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1972              		.loc 1 1010 0
 1973 0064 0220     		movs	r0, #2
 1974              	.LVL185:
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1975              		.loc 1 1032 0
 1976 0066 7047     		bx	lr
 1977              		.cfi_endproc
 1978              	.LFE137:
 1980              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 84


 1981              		.align	2
 1982              		.global	HAL_UART_DMAResume
 1983              		.thumb
 1984              		.thumb_func
 1986              	HAL_UART_DMAResume:
 1987              	.LFB138:
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1988              		.loc 1 1041 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 8
 1991              		@ frame_needed = 0, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993              	.LVL186:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1994              		.loc 1 1043 0
 1995 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1996 0004 012B     		cmp	r3, #1
 1997 0006 2DD0     		beq	.L127
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1998              		.loc 1 1043 0 is_stmt 0 discriminator 2
 1999 0008 0123     		movs	r3, #1
 2000 000a 80F83830 		strb	r3, [r0, #56]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2001              		.loc 1 1045 0 is_stmt 1 discriminator 2
 2002 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2003 0012 DBB2     		uxtb	r3, r3
 2004 0014 212B     		cmp	r3, #33
 2005 0016 04D1     		bne	.L125
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2006              		.loc 1 1048 0
 2007 0018 0268     		ldr	r2, [r0]
 2008 001a 5369     		ldr	r3, [r2, #20]
 2009 001c 43F08003 		orr	r3, r3, #128
 2010 0020 5361     		str	r3, [r2, #20]
 2011              	.L125:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2012              		.loc 1 1050 0
 2013 0022 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2014 0026 DBB2     		uxtb	r3, r3
 2015 0028 222B     		cmp	r3, #34
 2016 002a 1FD1     		bne	.L129
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2017              		.loc 1 1041 0
 2018 002c 82B0     		sub	sp, sp, #8
 2019              	.LCFI22:
 2020              		.cfi_def_cfa_offset 8
 2021              	.LBB3:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2022              		.loc 1 1053 0
 2023 002e 0023     		movs	r3, #0
 2024 0030 0193     		str	r3, [sp, #4]
 2025 0032 0368     		ldr	r3, [r0]
 2026 0034 1A68     		ldr	r2, [r3]
 2027 0036 0192     		str	r2, [sp, #4]
 2028 0038 5A68     		ldr	r2, [r3, #4]
 2029 003a 0192     		str	r2, [sp, #4]
 2030 003c 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 85


 2031              	.LBE3:
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2032              		.loc 1 1056 0
 2033 003e DA68     		ldr	r2, [r3, #12]
 2034 0040 42F48072 		orr	r2, r2, #256
 2035 0044 DA60     		str	r2, [r3, #12]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2036              		.loc 1 1057 0
 2037 0046 0268     		ldr	r2, [r0]
 2038 0048 5369     		ldr	r3, [r2, #20]
 2039 004a 43F00103 		orr	r3, r3, #1
 2040 004e 5361     		str	r3, [r2, #20]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2041              		.loc 1 1060 0
 2042 0050 0268     		ldr	r2, [r0]
 2043 0052 5369     		ldr	r3, [r2, #20]
 2044 0054 43F04003 		orr	r3, r3, #64
 2045 0058 5361     		str	r3, [r2, #20]
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2046              		.loc 1 1064 0
 2047 005a 0023     		movs	r3, #0
 2048 005c 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2049              		.loc 1 1066 0
 2050 0060 1846     		mov	r0, r3
 2051              	.LVL187:
 2052 0062 01E0     		b	.L124
 2053              	.LVL188:
 2054              	.L127:
 2055              	.LCFI23:
 2056              		.cfi_def_cfa_offset 0
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2057              		.loc 1 1043 0
 2058 0064 0220     		movs	r0, #2
 2059              	.LVL189:
 2060 0066 7047     		bx	lr
 2061              	.L124:
 2062              	.LCFI24:
 2063              		.cfi_def_cfa_offset 8
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2064              		.loc 1 1067 0
 2065 0068 02B0     		add	sp, sp, #8
 2066              	.LCFI25:
 2067              		.cfi_def_cfa_offset 0
 2068              		@ sp needed
 2069 006a 7047     		bx	lr
 2070              	.LVL190:
 2071              	.L129:
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2072              		.loc 1 1064 0
 2073 006c 0023     		movs	r3, #0
 2074 006e 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2075              		.loc 1 1066 0
 2076 0072 1846     		mov	r0, r3
 2077              	.LVL191:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 86


 2078              		.loc 1 1067 0
 2079 0074 7047     		bx	lr
 2080              		.cfi_endproc
 2081              	.LFE138:
 2083 0076 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2084              		.align	2
 2085              		.global	HAL_UART_DMAStop
 2086              		.thumb
 2087              		.thumb_func
 2089              	HAL_UART_DMAStop:
 2090              	.LFB139:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2091              		.loc 1 1076 0
 2092              		.cfi_startproc
 2093              		@ args = 0, pretend = 0, frame = 0
 2094              		@ frame_needed = 0, uses_anonymous_args = 0
 2095              	.LVL192:
 2096 0000 10B5     		push	{r4, lr}
 2097              	.LCFI26:
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 4, -8
 2100              		.cfi_offset 14, -4
 2101 0002 0446     		mov	r4, r0
 2102              	.LVL193:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2103              		.loc 1 1085 0
 2104 0004 0168     		ldr	r1, [r0]
 2105 0006 4B69     		ldr	r3, [r1, #20]
 2106 0008 03F08002 		and	r2, r3, #128
 2107              	.LVL194:
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2108              		.loc 1 1086 0
 2109 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2110 0010 DBB2     		uxtb	r3, r3
 2111 0012 212B     		cmp	r3, #33
 2112 0014 0BD1     		bne	.L132
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2113              		.loc 1 1086 0 is_stmt 0 discriminator 1
 2114 0016 52B1     		cbz	r2, .L132
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2115              		.loc 1 1088 0 is_stmt 1
 2116 0018 4B69     		ldr	r3, [r1, #20]
 2117 001a 23F08003 		bic	r3, r3, #128
 2118 001e 4B61     		str	r3, [r1, #20]
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2119              		.loc 1 1091 0
 2120 0020 006B     		ldr	r0, [r0, #48]
 2121              	.LVL195:
 2122 0022 08B1     		cbz	r0, .L133
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2123              		.loc 1 1093 0
 2124 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 2125              	.LVL196:
 2126              	.L133:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2127              		.loc 1 1095 0
 2128 0028 2046     		mov	r0, r4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 87


 2129 002a FFF7FEFF 		bl	UART_EndTxTransfer
 2130              	.LVL197:
 2131              	.L132:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2132              		.loc 1 1099 0
 2133 002e 2168     		ldr	r1, [r4]
 2134 0030 4B69     		ldr	r3, [r1, #20]
 2135 0032 03F04002 		and	r2, r3, #64
 2136              	.LVL198:
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2137              		.loc 1 1100 0
 2138 0036 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2139 003a DBB2     		uxtb	r3, r3
 2140 003c 222B     		cmp	r3, #34
 2141 003e 0BD1     		bne	.L134
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2142              		.loc 1 1100 0 is_stmt 0 discriminator 1
 2143 0040 52B1     		cbz	r2, .L134
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2144              		.loc 1 1102 0 is_stmt 1
 2145 0042 4B69     		ldr	r3, [r1, #20]
 2146 0044 23F04003 		bic	r3, r3, #64
 2147 0048 4B61     		str	r3, [r1, #20]
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2148              		.loc 1 1105 0
 2149 004a 606B     		ldr	r0, [r4, #52]
 2150 004c 08B1     		cbz	r0, .L135
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2151              		.loc 1 1107 0
 2152 004e FFF7FEFF 		bl	HAL_DMA_Abort
 2153              	.LVL199:
 2154              	.L135:
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2155              		.loc 1 1109 0
 2156 0052 2046     		mov	r0, r4
 2157 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 2158              	.LVL200:
 2159              	.L134:
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2160              		.loc 1 1113 0
 2161 0058 0020     		movs	r0, #0
 2162 005a 10BD     		pop	{r4, pc}
 2163              		.cfi_endproc
 2164              	.LFE139:
 2166              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2167              		.align	2
 2168              		.global	HAL_UART_Abort
 2169              		.thumb
 2170              		.thumb_func
 2172              	HAL_UART_Abort:
 2173              	.LFB140:
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2174              		.loc 1 1128 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL201:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 88


 2179 0000 10B5     		push	{r4, lr}
 2180              	.LCFI27:
 2181              		.cfi_def_cfa_offset 8
 2182              		.cfi_offset 4, -8
 2183              		.cfi_offset 14, -4
 2184 0002 0446     		mov	r4, r0
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2185              		.loc 1 1130 0
 2186 0004 0268     		ldr	r2, [r0]
 2187 0006 D368     		ldr	r3, [r2, #12]
 2188 0008 23F4F073 		bic	r3, r3, #480
 2189 000c D360     		str	r3, [r2, #12]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2190              		.loc 1 1131 0
 2191 000e 0268     		ldr	r2, [r0]
 2192 0010 5369     		ldr	r3, [r2, #20]
 2193 0012 23F00103 		bic	r3, r3, #1
 2194 0016 5361     		str	r3, [r2, #20]
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2195              		.loc 1 1134 0
 2196 0018 0368     		ldr	r3, [r0]
 2197 001a 5A69     		ldr	r2, [r3, #20]
 2198 001c 12F0800F 		tst	r2, #128
 2199 0020 0AD0     		beq	.L138
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2200              		.loc 1 1136 0
 2201 0022 5A69     		ldr	r2, [r3, #20]
 2202 0024 22F08002 		bic	r2, r2, #128
 2203 0028 5A61     		str	r2, [r3, #20]
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2204              		.loc 1 1139 0
 2205 002a 036B     		ldr	r3, [r0, #48]
 2206 002c 23B1     		cbz	r3, .L138
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2207              		.loc 1 1143 0
 2208 002e 0022     		movs	r2, #0
 2209 0030 1A65     		str	r2, [r3, #80]
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2210              		.loc 1 1145 0
 2211 0032 006B     		ldr	r0, [r0, #48]
 2212              	.LVL202:
 2213 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2214              	.LVL203:
 2215              	.L138:
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2216              		.loc 1 1150 0
 2217 0038 2368     		ldr	r3, [r4]
 2218 003a 5A69     		ldr	r2, [r3, #20]
 2219 003c 12F0400F 		tst	r2, #64
 2220 0040 0AD0     		beq	.L139
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2221              		.loc 1 1152 0
 2222 0042 5A69     		ldr	r2, [r3, #20]
 2223 0044 22F04002 		bic	r2, r2, #64
 2224 0048 5A61     		str	r2, [r3, #20]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2225              		.loc 1 1155 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 89


 2226 004a 636B     		ldr	r3, [r4, #52]
 2227 004c 23B1     		cbz	r3, .L139
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2228              		.loc 1 1159 0
 2229 004e 0022     		movs	r2, #0
 2230 0050 1A65     		str	r2, [r3, #80]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2231              		.loc 1 1161 0
 2232 0052 606B     		ldr	r0, [r4, #52]
 2233 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2234              	.LVL204:
 2235              	.L139:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2236              		.loc 1 1166 0
 2237 0058 0020     		movs	r0, #0
 2238 005a E084     		strh	r0, [r4, #38]	@ movhi
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2239              		.loc 1 1167 0
 2240 005c E085     		strh	r0, [r4, #46]	@ movhi
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2241              		.loc 1 1170 0
 2242 005e E063     		str	r0, [r4, #60]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2243              		.loc 1 1173 0
 2244 0060 2023     		movs	r3, #32
 2245 0062 84F83A30 		strb	r3, [r4, #58]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2246              		.loc 1 1174 0
 2247 0066 84F83930 		strb	r3, [r4, #57]
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2248              		.loc 1 1177 0
 2249 006a 10BD     		pop	{r4, pc}
 2250              		.cfi_endproc
 2251              	.LFE140:
 2253              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2254              		.align	2
 2255              		.global	HAL_UART_AbortTransmit
 2256              		.thumb
 2257              		.thumb_func
 2259              	HAL_UART_AbortTransmit:
 2260              	.LFB141:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2261              		.loc 1 1192 0
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 0, uses_anonymous_args = 0
 2265              	.LVL205:
 2266 0000 10B5     		push	{r4, lr}
 2267              	.LCFI28:
 2268              		.cfi_def_cfa_offset 8
 2269              		.cfi_offset 4, -8
 2270              		.cfi_offset 14, -4
 2271 0002 0446     		mov	r4, r0
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2272              		.loc 1 1194 0
 2273 0004 0268     		ldr	r2, [r0]
 2274 0006 D368     		ldr	r3, [r2, #12]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 90


 2275 0008 23F0C003 		bic	r3, r3, #192
 2276 000c D360     		str	r3, [r2, #12]
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2277              		.loc 1 1197 0
 2278 000e 0368     		ldr	r3, [r0]
 2279 0010 5A69     		ldr	r2, [r3, #20]
 2280 0012 12F0800F 		tst	r2, #128
 2281 0016 0AD0     		beq	.L142
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2282              		.loc 1 1199 0
 2283 0018 5A69     		ldr	r2, [r3, #20]
 2284 001a 22F08002 		bic	r2, r2, #128
 2285 001e 5A61     		str	r2, [r3, #20]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2286              		.loc 1 1202 0
 2287 0020 036B     		ldr	r3, [r0, #48]
 2288 0022 23B1     		cbz	r3, .L142
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2289              		.loc 1 1206 0
 2290 0024 0022     		movs	r2, #0
 2291 0026 1A65     		str	r2, [r3, #80]
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2292              		.loc 1 1208 0
 2293 0028 006B     		ldr	r0, [r0, #48]
 2294              	.LVL206:
 2295 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2296              	.LVL207:
 2297              	.L142:
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2298              		.loc 1 1213 0
 2299 002e 0020     		movs	r0, #0
 2300 0030 E084     		strh	r0, [r4, #38]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2301              		.loc 1 1216 0
 2302 0032 2023     		movs	r3, #32
 2303 0034 84F83930 		strb	r3, [r4, #57]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2304              		.loc 1 1219 0
 2305 0038 10BD     		pop	{r4, pc}
 2306              		.cfi_endproc
 2307              	.LFE141:
 2309 003a 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2310              		.align	2
 2311              		.global	HAL_UART_AbortReceive
 2312              		.thumb
 2313              		.thumb_func
 2315              	HAL_UART_AbortReceive:
 2316              	.LFB142:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2317              		.loc 1 1234 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
 2321              	.LVL208:
 2322 0000 10B5     		push	{r4, lr}
 2323              	.LCFI29:
 2324              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 91


 2325              		.cfi_offset 4, -8
 2326              		.cfi_offset 14, -4
 2327 0002 0446     		mov	r4, r0
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2328              		.loc 1 1236 0
 2329 0004 0268     		ldr	r2, [r0]
 2330 0006 D368     		ldr	r3, [r2, #12]
 2331 0008 23F49073 		bic	r3, r3, #288
 2332 000c D360     		str	r3, [r2, #12]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2333              		.loc 1 1237 0
 2334 000e 0268     		ldr	r2, [r0]
 2335 0010 5369     		ldr	r3, [r2, #20]
 2336 0012 23F00103 		bic	r3, r3, #1
 2337 0016 5361     		str	r3, [r2, #20]
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2338              		.loc 1 1240 0
 2339 0018 0368     		ldr	r3, [r0]
 2340 001a 5A69     		ldr	r2, [r3, #20]
 2341 001c 12F0400F 		tst	r2, #64
 2342 0020 0AD0     		beq	.L145
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2343              		.loc 1 1242 0
 2344 0022 5A69     		ldr	r2, [r3, #20]
 2345 0024 22F04002 		bic	r2, r2, #64
 2346 0028 5A61     		str	r2, [r3, #20]
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2347              		.loc 1 1245 0
 2348 002a 436B     		ldr	r3, [r0, #52]
 2349 002c 23B1     		cbz	r3, .L145
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2350              		.loc 1 1249 0
 2351 002e 0022     		movs	r2, #0
 2352 0030 1A65     		str	r2, [r3, #80]
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2353              		.loc 1 1251 0
 2354 0032 406B     		ldr	r0, [r0, #52]
 2355              	.LVL209:
 2356 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2357              	.LVL210:
 2358              	.L145:
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2359              		.loc 1 1256 0
 2360 0038 0020     		movs	r0, #0
 2361 003a E085     		strh	r0, [r4, #46]	@ movhi
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2362              		.loc 1 1259 0
 2363 003c 2023     		movs	r3, #32
 2364 003e 84F83A30 		strb	r3, [r4, #58]
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2365              		.loc 1 1262 0
 2366 0042 10BD     		pop	{r4, pc}
 2367              		.cfi_endproc
 2368              	.LFE142:
 2370              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2371              		.align	2
 2372              		.weak	HAL_UART_TxCpltCallback
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 92


 2373              		.thumb
 2374              		.thumb_func
 2376              	HAL_UART_TxCpltCallback:
 2377              	.LFB147:
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2378              		.loc 1 1651 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
 2383              	.LVL211:
 2384 0000 7047     		bx	lr
 2385              		.cfi_endproc
 2386              	.LFE147:
 2388 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2389              		.align	2
 2390              		.thumb
 2391              		.thumb_func
 2393              	UART_DMATransmitCplt:
 2394              	.LFB162:
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2395              		.loc 1 1993 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399              	.LVL212:
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2400              		.loc 1 1993 0
 2401 0000 08B5     		push	{r3, lr}
 2402              	.LCFI30:
 2403              		.cfi_def_cfa_offset 8
 2404              		.cfi_offset 3, -8
 2405              		.cfi_offset 14, -4
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2406              		.loc 1 1994 0
 2407 0002 836B     		ldr	r3, [r0, #56]
 2408              	.LVL213:
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2409              		.loc 1 1996 0
 2410 0004 0268     		ldr	r2, [r0]
 2411 0006 1268     		ldr	r2, [r2]
 2412 0008 12F4807F 		tst	r2, #256
 2413 000c 0CD1     		bne	.L149
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2414              		.loc 1 1998 0
 2415 000e 0022     		movs	r2, #0
 2416 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2417              		.loc 1 2002 0
 2418 0012 1968     		ldr	r1, [r3]
 2419 0014 4A69     		ldr	r2, [r1, #20]
 2420 0016 22F08002 		bic	r2, r2, #128
 2421 001a 4A61     		str	r2, [r1, #20]
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2422              		.loc 1 2005 0
 2423 001c 1A68     		ldr	r2, [r3]
 2424 001e D368     		ldr	r3, [r2, #12]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 93


 2425              	.LVL214:
 2426 0020 43F04003 		orr	r3, r3, #64
 2427 0024 D360     		str	r3, [r2, #12]
 2428 0026 08BD     		pop	{r3, pc}
 2429              	.LVL215:
 2430              	.L149:
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2431              		.loc 1 2011 0
 2432 0028 1846     		mov	r0, r3
 2433              	.LVL216:
 2434 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2435              	.LVL217:
 2436 002e 08BD     		pop	{r3, pc}
 2437              		.cfi_endproc
 2438              	.LFE162:
 2440              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2441              		.align	2
 2442              		.thumb
 2443              		.thumb_func
 2445              	UART_EndTransmit_IT:
 2446              	.LFB176:
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2447              		.loc 1 2352 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 0, uses_anonymous_args = 0
 2451              	.LVL218:
 2452 0000 08B5     		push	{r3, lr}
 2453              	.LCFI31:
 2454              		.cfi_def_cfa_offset 8
 2455              		.cfi_offset 3, -8
 2456              		.cfi_offset 14, -4
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2457              		.loc 1 2354 0
 2458 0002 0168     		ldr	r1, [r0]
 2459 0004 CB68     		ldr	r3, [r1, #12]
 2460 0006 23F04003 		bic	r3, r3, #64
 2461 000a CB60     		str	r3, [r1, #12]
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2462              		.loc 1 2357 0
 2463 000c 2023     		movs	r3, #32
 2464 000e 80F83930 		strb	r3, [r0, #57]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2465              		.loc 1 2359 0
 2466 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2467              	.LVL219:
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2468              		.loc 1 2362 0
 2469 0016 0020     		movs	r0, #0
 2470 0018 08BD     		pop	{r3, pc}
 2471              		.cfi_endproc
 2472              	.LFE176:
 2474 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2475              		.align	2
 2476              		.weak	HAL_UART_TxHalfCpltCallback
 2477              		.thumb
 2478              		.thumb_func
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 94


 2480              	HAL_UART_TxHalfCpltCallback:
 2481              	.LFB148:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2482              		.loc 1 1666 0
 2483              		.cfi_startproc
 2484              		@ args = 0, pretend = 0, frame = 0
 2485              		@ frame_needed = 0, uses_anonymous_args = 0
 2486              		@ link register save eliminated.
 2487              	.LVL220:
 2488 0000 7047     		bx	lr
 2489              		.cfi_endproc
 2490              	.LFE148:
 2492 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2493              		.align	2
 2494              		.thumb
 2495              		.thumb_func
 2497              	UART_DMATxHalfCplt:
 2498              	.LFB163:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2499              		.loc 1 2022 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503              	.LVL221:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2504              		.loc 1 2022 0
 2505 0000 08B5     		push	{r3, lr}
 2506              	.LCFI32:
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 3, -8
 2509              		.cfi_offset 14, -4
 2510              	.LVL222:
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2511              		.loc 1 2025 0
 2512 0002 806B     		ldr	r0, [r0, #56]
 2513              	.LVL223:
 2514 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2515              	.LVL224:
 2516 0008 08BD     		pop	{r3, pc}
 2517              		.cfi_endproc
 2518              	.LFE163:
 2520 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2521              		.align	2
 2522              		.weak	HAL_UART_RxCpltCallback
 2523              		.thumb
 2524              		.thumb_func
 2526              	HAL_UART_RxCpltCallback:
 2527              	.LFB149:
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2528              		.loc 1 1681 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 0
 2531              		@ frame_needed = 0, uses_anonymous_args = 0
 2532              		@ link register save eliminated.
 2533              	.LVL225:
 2534 0000 7047     		bx	lr
 2535              		.cfi_endproc
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 95


 2536              	.LFE149:
 2538 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2539              		.align	2
 2540              		.thumb
 2541              		.thumb_func
 2543              	UART_DMAReceiveCplt:
 2544              	.LFB164:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2545              		.loc 1 2034 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549              	.LVL226:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2550              		.loc 1 2034 0
 2551 0000 08B5     		push	{r3, lr}
 2552              	.LCFI33:
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 3, -8
 2555              		.cfi_offset 14, -4
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2556              		.loc 1 2035 0
 2557 0002 836B     		ldr	r3, [r0, #56]
 2558              	.LVL227:
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2559              		.loc 1 2037 0
 2560 0004 0268     		ldr	r2, [r0]
 2561 0006 1268     		ldr	r2, [r2]
 2562 0008 12F4807F 		tst	r2, #256
 2563 000c 13D1     		bne	.L159
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2564              		.loc 1 2039 0
 2565 000e 0022     		movs	r2, #0
 2566 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2567              		.loc 1 2042 0
 2568 0012 1968     		ldr	r1, [r3]
 2569 0014 CA68     		ldr	r2, [r1, #12]
 2570 0016 22F48072 		bic	r2, r2, #256
 2571 001a CA60     		str	r2, [r1, #12]
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2572              		.loc 1 2043 0
 2573 001c 1968     		ldr	r1, [r3]
 2574 001e 4A69     		ldr	r2, [r1, #20]
 2575 0020 22F00102 		bic	r2, r2, #1
 2576 0024 4A61     		str	r2, [r1, #20]
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 2577              		.loc 1 2047 0
 2578 0026 1968     		ldr	r1, [r3]
 2579 0028 4A69     		ldr	r2, [r1, #20]
 2580 002a 22F04002 		bic	r2, r2, #64
 2581 002e 4A61     		str	r2, [r1, #20]
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2582              		.loc 1 2050 0
 2583 0030 2022     		movs	r2, #32
 2584 0032 83F83A20 		strb	r2, [r3, #58]
 2585              	.L159:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 96


2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2586              		.loc 1 2052 0
 2587 0036 1846     		mov	r0, r3
 2588              	.LVL228:
 2589 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2590              	.LVL229:
 2591 003c 08BD     		pop	{r3, pc}
 2592              		.cfi_endproc
 2593              	.LFE164:
 2595 003e 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 2596              		.align	2
 2597              		.thumb
 2598              		.thumb_func
 2600              	UART_Receive_IT:
 2601              	.LFB177:
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 2602              		.loc 1 2371 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 0
 2605              		@ frame_needed = 0, uses_anonymous_args = 0
 2606              	.LVL230:
 2607 0000 08B5     		push	{r3, lr}
 2608              	.LCFI34:
 2609              		.cfi_def_cfa_offset 8
 2610              		.cfi_offset 3, -8
 2611              		.cfi_offset 14, -4
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2612              		.loc 1 2375 0
 2613 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2614 0006 DBB2     		uxtb	r3, r3
 2615 0008 222B     		cmp	r3, #34
 2616 000a 3FD1     		bne	.L167
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2617              		.loc 1 2377 0
 2618 000c 8368     		ldr	r3, [r0, #8]
 2619 000e B3F5805F 		cmp	r3, #4096
 2620 0012 13D1     		bne	.L163
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2621              		.loc 1 2379 0
 2622 0014 826A     		ldr	r2, [r0, #40]
 2623              	.LVL231:
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2624              		.loc 1 2380 0
 2625 0016 0369     		ldr	r3, [r0, #16]
 2626 0018 43B9     		cbnz	r3, .L164
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2627              		.loc 1 2382 0
 2628 001a 0368     		ldr	r3, [r0]
 2629 001c 5B68     		ldr	r3, [r3, #4]
 2630 001e C3F30803 		ubfx	r3, r3, #0, #9
 2631 0022 1380     		strh	r3, [r2]	@ movhi
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2632              		.loc 1 2383 0
 2633 0024 836A     		ldr	r3, [r0, #40]
 2634 0026 0233     		adds	r3, r3, #2
 2635 0028 8362     		str	r3, [r0, #40]
 2636 002a 18E0     		b	.L165
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 97


 2637              	.L164:
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2638              		.loc 1 2387 0
 2639 002c 0368     		ldr	r3, [r0]
 2640 002e 5B68     		ldr	r3, [r3, #4]
 2641 0030 DBB2     		uxtb	r3, r3
 2642 0032 1380     		strh	r3, [r2]	@ movhi
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2643              		.loc 1 2388 0
 2644 0034 836A     		ldr	r3, [r0, #40]
 2645 0036 0133     		adds	r3, r3, #1
 2646 0038 8362     		str	r3, [r0, #40]
 2647 003a 10E0     		b	.L165
 2648              	.LVL232:
 2649              	.L163:
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2650              		.loc 1 2393 0
 2651 003c 0369     		ldr	r3, [r0, #16]
 2652 003e 33B9     		cbnz	r3, .L166
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2653              		.loc 1 2395 0
 2654 0040 836A     		ldr	r3, [r0, #40]
 2655 0042 5A1C     		adds	r2, r3, #1
 2656 0044 8262     		str	r2, [r0, #40]
 2657 0046 0268     		ldr	r2, [r0]
 2658 0048 5268     		ldr	r2, [r2, #4]
 2659 004a 1A70     		strb	r2, [r3]
 2660 004c 07E0     		b	.L165
 2661              	.L166:
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2662              		.loc 1 2399 0
 2663 004e 826A     		ldr	r2, [r0, #40]
 2664 0050 531C     		adds	r3, r2, #1
 2665 0052 8362     		str	r3, [r0, #40]
 2666 0054 0368     		ldr	r3, [r0]
 2667 0056 5B68     		ldr	r3, [r3, #4]
 2668 0058 03F07F03 		and	r3, r3, #127
 2669 005c 1370     		strb	r3, [r2]
 2670              	.L165:
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2671              		.loc 1 2403 0
 2672 005e C38D     		ldrh	r3, [r0, #46]
 2673 0060 9BB2     		uxth	r3, r3
 2674 0062 013B     		subs	r3, r3, #1
 2675 0064 9BB2     		uxth	r3, r3
 2676 0066 C385     		strh	r3, [r0, #46]	@ movhi
 2677 0068 93B9     		cbnz	r3, .L168
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2678              		.loc 1 2406 0
 2679 006a 0268     		ldr	r2, [r0]
 2680 006c D368     		ldr	r3, [r2, #12]
 2681 006e 23F49073 		bic	r3, r3, #288
 2682 0072 D360     		str	r3, [r2, #12]
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2683              		.loc 1 2409 0
 2684 0074 0268     		ldr	r2, [r0]
 2685 0076 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 98


 2686 0078 23F00103 		bic	r3, r3, #1
 2687 007c 5361     		str	r3, [r2, #20]
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 2688              		.loc 1 2412 0
 2689 007e 2023     		movs	r3, #32
 2690 0080 80F83A30 		strb	r3, [r0, #58]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2691              		.loc 1 2414 0
 2692 0084 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2693              	.LVL233:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2694              		.loc 1 2416 0
 2695 0088 0020     		movs	r0, #0
 2696 008a 08BD     		pop	{r3, pc}
 2697              	.LVL234:
 2698              	.L167:
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2699              		.loc 1 2422 0
 2700 008c 0220     		movs	r0, #2
 2701              	.LVL235:
 2702 008e 08BD     		pop	{r3, pc}
 2703              	.LVL236:
 2704              	.L168:
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2705              		.loc 1 2418 0
 2706 0090 0020     		movs	r0, #0
 2707              	.LVL237:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2708              		.loc 1 2424 0
 2709 0092 08BD     		pop	{r3, pc}
 2710              		.cfi_endproc
 2711              	.LFE177:
 2713              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2714              		.align	2
 2715              		.weak	HAL_UART_RxHalfCpltCallback
 2716              		.thumb
 2717              		.thumb_func
 2719              	HAL_UART_RxHalfCpltCallback:
 2720              	.LFB150:
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2721              		.loc 1 1696 0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              		@ link register save eliminated.
 2726              	.LVL238:
 2727 0000 7047     		bx	lr
 2728              		.cfi_endproc
 2729              	.LFE150:
 2731 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2732              		.align	2
 2733              		.thumb
 2734              		.thumb_func
 2736              	UART_DMARxHalfCplt:
 2737              	.LFB165:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2738              		.loc 1 2062 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 99


 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 0
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
 2742              	.LVL239:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2743              		.loc 1 2062 0
 2744 0000 08B5     		push	{r3, lr}
 2745              	.LCFI35:
 2746              		.cfi_def_cfa_offset 8
 2747              		.cfi_offset 3, -8
 2748              		.cfi_offset 14, -4
 2749              	.LVL240:
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2750              		.loc 1 2065 0
 2751 0002 806B     		ldr	r0, [r0, #56]
 2752              	.LVL241:
 2753 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2754              	.LVL242:
 2755 0008 08BD     		pop	{r3, pc}
 2756              		.cfi_endproc
 2757              	.LFE165:
 2759 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2760              		.align	2
 2761              		.weak	HAL_UART_ErrorCallback
 2762              		.thumb
 2763              		.thumb_func
 2765              	HAL_UART_ErrorCallback:
 2766              	.LFB151:
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2767              		.loc 1 1711 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 0
 2770              		@ frame_needed = 0, uses_anonymous_args = 0
 2771              		@ link register save eliminated.
 2772              	.LVL243:
 2773 0000 7047     		bx	lr
 2774              		.cfi_endproc
 2775              	.LFE151:
 2777 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2778              		.align	2
 2779              		.thumb
 2780              		.thumb_func
 2782              	UART_DMAError:
 2783              	.LFB166:
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2784              		.loc 1 2074 0
 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 0
 2787              		@ frame_needed = 0, uses_anonymous_args = 0
 2788              	.LVL244:
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2789              		.loc 1 2074 0
 2790 0000 10B5     		push	{r4, lr}
 2791              	.LCFI36:
 2792              		.cfi_def_cfa_offset 8
 2793              		.cfi_offset 4, -8
 2794              		.cfi_offset 14, -4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 100


 2795              	.LVL245:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2796              		.loc 1 2076 0
 2797 0002 846B     		ldr	r4, [r0, #56]
 2798              	.LVL246:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2799              		.loc 1 2079 0
 2800 0004 2368     		ldr	r3, [r4]
 2801 0006 5B69     		ldr	r3, [r3, #20]
 2802 0008 03F08002 		and	r2, r3, #128
 2803              	.LVL247:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2804              		.loc 1 2080 0
 2805 000c 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2806 0010 DBB2     		uxtb	r3, r3
 2807 0012 212B     		cmp	r3, #33
 2808 0014 05D1     		bne	.L175
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2809              		.loc 1 2080 0 is_stmt 0 discriminator 1
 2810 0016 22B1     		cbz	r2, .L175
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2811              		.loc 1 2082 0 is_stmt 1
 2812 0018 0023     		movs	r3, #0
 2813 001a E384     		strh	r3, [r4, #38]	@ movhi
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2814              		.loc 1 2083 0
 2815 001c 2046     		mov	r0, r4
 2816              	.LVL248:
 2817 001e FFF7FEFF 		bl	UART_EndTxTransfer
 2818              	.LVL249:
 2819              	.L175:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2820              		.loc 1 2087 0
 2821 0022 2368     		ldr	r3, [r4]
 2822 0024 5B69     		ldr	r3, [r3, #20]
 2823 0026 03F04002 		and	r2, r3, #64
 2824              	.LVL250:
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2825              		.loc 1 2088 0
 2826 002a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2827 002e DBB2     		uxtb	r3, r3
 2828 0030 222B     		cmp	r3, #34
 2829 0032 05D1     		bne	.L176
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2830              		.loc 1 2088 0 is_stmt 0 discriminator 1
 2831 0034 22B1     		cbz	r2, .L176
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2832              		.loc 1 2090 0 is_stmt 1
 2833 0036 0023     		movs	r3, #0
 2834 0038 E385     		strh	r3, [r4, #46]	@ movhi
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2835              		.loc 1 2091 0
 2836 003a 2046     		mov	r0, r4
 2837 003c FFF7FEFF 		bl	UART_EndRxTransfer
 2838              	.LVL251:
 2839              	.L176:
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 101


 2840              		.loc 1 2094 0
 2841 0040 E36B     		ldr	r3, [r4, #60]
 2842 0042 43F01003 		orr	r3, r3, #16
 2843 0046 E363     		str	r3, [r4, #60]
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2844              		.loc 1 2095 0
 2845 0048 2046     		mov	r0, r4
 2846 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2847              	.LVL252:
 2848 004e 10BD     		pop	{r4, pc}
 2849              		.cfi_endproc
 2850              	.LFE166:
 2852              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2853              		.align	2
 2854              		.global	HAL_UART_IRQHandler
 2855              		.thumb
 2856              		.thumb_func
 2858              	HAL_UART_IRQHandler:
 2859              	.LFB146:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2860              		.loc 1 1524 0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              	.LVL253:
 2865 0000 10B5     		push	{r4, lr}
 2866              	.LCFI37:
 2867              		.cfi_def_cfa_offset 8
 2868              		.cfi_offset 4, -8
 2869              		.cfi_offset 14, -4
 2870 0002 0446     		mov	r4, r0
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2871              		.loc 1 1525 0
 2872 0004 0268     		ldr	r2, [r0]
 2873 0006 1368     		ldr	r3, [r2]
 2874              	.LVL254:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2875              		.loc 1 1526 0
 2876 0008 D168     		ldr	r1, [r2, #12]
 2877              	.LVL255:
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2878              		.loc 1 1527 0
 2879 000a 5269     		ldr	r2, [r2, #20]
 2880              	.LVL256:
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2881              		.loc 1 1533 0
 2882 000c 13F00F00 		ands	r0, r3, #15
 2883              	.LVL257:
 2884 0010 09D1     		bne	.L179
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2885              		.loc 1 1536 0
 2886 0012 13F0200F 		tst	r3, #32
 2887 0016 06D0     		beq	.L179
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2888              		.loc 1 1536 0 is_stmt 0 discriminator 1
 2889 0018 11F0200F 		tst	r1, #32
 2890 001c 03D0     		beq	.L179
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 102


1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 2891              		.loc 1 1538 0 is_stmt 1
 2892 001e 2046     		mov	r0, r4
 2893              	.LVL258:
 2894 0020 FFF7FEFF 		bl	UART_Receive_IT
 2895              	.LVL259:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2896              		.loc 1 1539 0
 2897 0024 10BD     		pop	{r4, pc}
 2898              	.LVL260:
 2899              	.L179:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2900              		.loc 1 1544 0
 2901 0026 0028     		cmp	r0, #0
 2902 0028 62D0     		beq	.L181
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2903              		.loc 1 1544 0 is_stmt 0 discriminator 1
 2904 002a 12F00102 		ands	r2, r2, #1
 2905              	.LVL261:
 2906 002e 02D1     		bne	.L182
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2907              		.loc 1 1544 0 discriminator 2
 2908 0030 11F4907F 		tst	r1, #288
 2909 0034 5CD0     		beq	.L181
 2910              	.L182:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2911              		.loc 1 1547 0 is_stmt 1
 2912 0036 13F0010F 		tst	r3, #1
 2913 003a 06D0     		beq	.L183
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2914              		.loc 1 1547 0 is_stmt 0 discriminator 1
 2915 003c 11F4807F 		tst	r1, #256
 2916 0040 03D0     		beq	.L183
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2917              		.loc 1 1549 0 is_stmt 1
 2918 0042 E06B     		ldr	r0, [r4, #60]
 2919              	.LVL262:
 2920 0044 40F00100 		orr	r0, r0, #1
 2921 0048 E063     		str	r0, [r4, #60]
 2922              	.L183:
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2923              		.loc 1 1553 0
 2924 004a 13F0040F 		tst	r3, #4
 2925 004e 04D0     		beq	.L184
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2926              		.loc 1 1553 0 is_stmt 0 discriminator 1
 2927 0050 1AB1     		cbz	r2, .L184
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2928              		.loc 1 1555 0 is_stmt 1
 2929 0052 E06B     		ldr	r0, [r4, #60]
 2930 0054 40F00200 		orr	r0, r0, #2
 2931 0058 E063     		str	r0, [r4, #60]
 2932              	.L184:
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2933              		.loc 1 1559 0
 2934 005a 13F0020F 		tst	r3, #2
 2935 005e 04D0     		beq	.L185
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 103


1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2936              		.loc 1 1559 0 is_stmt 0 discriminator 1
 2937 0060 1AB1     		cbz	r2, .L185
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2938              		.loc 1 1561 0 is_stmt 1
 2939 0062 E06B     		ldr	r0, [r4, #60]
 2940 0064 40F00400 		orr	r0, r0, #4
 2941 0068 E063     		str	r0, [r4, #60]
 2942              	.L185:
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2943              		.loc 1 1565 0
 2944 006a 13F0080F 		tst	r3, #8
 2945 006e 04D0     		beq	.L186
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2946              		.loc 1 1565 0 is_stmt 0 discriminator 1
 2947 0070 1AB1     		cbz	r2, .L186
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2948              		.loc 1 1567 0 is_stmt 1
 2949 0072 E26B     		ldr	r2, [r4, #60]
 2950 0074 42F00802 		orr	r2, r2, #8
 2951 0078 E263     		str	r2, [r4, #60]
 2952              	.L186:
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2953              		.loc 1 1571 0
 2954 007a E26B     		ldr	r2, [r4, #60]
 2955 007c 002A     		cmp	r2, #0
 2956 007e 4AD0     		beq	.L178
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2957              		.loc 1 1574 0
 2958 0080 13F0200F 		tst	r3, #32
 2959 0084 05D0     		beq	.L187
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2960              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2961 0086 11F0200F 		tst	r1, #32
 2962 008a 02D0     		beq	.L187
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2963              		.loc 1 1576 0 is_stmt 1
 2964 008c 2046     		mov	r0, r4
 2965 008e FFF7FEFF 		bl	UART_Receive_IT
 2966              	.LVL263:
 2967              	.L187:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2968              		.loc 1 1581 0
 2969 0092 2368     		ldr	r3, [r4]
 2970 0094 5B69     		ldr	r3, [r3, #20]
 2971 0096 03F04003 		and	r3, r3, #64
 2972              	.LVL264:
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2973              		.loc 1 1582 0
 2974 009a E26B     		ldr	r2, [r4, #60]
 2975 009c 12F0080F 		tst	r2, #8
 2976 00a0 00D1     		bne	.L188
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2977              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2978 00a2 FBB1     		cbz	r3, .L189
 2979              	.L188:
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 104


 2980              		.loc 1 1587 0 is_stmt 1
 2981 00a4 2046     		mov	r0, r4
 2982 00a6 FFF7FEFF 		bl	UART_EndRxTransfer
 2983              	.LVL265:
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2984              		.loc 1 1590 0
 2985 00aa 2368     		ldr	r3, [r4]
 2986 00ac 5A69     		ldr	r2, [r3, #20]
 2987 00ae 12F0400F 		tst	r2, #64
 2988 00b2 13D0     		beq	.L190
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 2989              		.loc 1 1592 0
 2990 00b4 5A69     		ldr	r2, [r3, #20]
 2991 00b6 22F04002 		bic	r2, r2, #64
 2992 00ba 5A61     		str	r2, [r3, #20]
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2993              		.loc 1 1595 0
 2994 00bc 636B     		ldr	r3, [r4, #52]
 2995 00be 4BB1     		cbz	r3, .L191
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2996              		.loc 1 1599 0
 2997 00c0 154A     		ldr	r2, .L194
 2998 00c2 1A65     		str	r2, [r3, #80]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 2999              		.loc 1 1600 0
 3000 00c4 606B     		ldr	r0, [r4, #52]
 3001 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3002              	.LVL266:
 3003 00ca 20B3     		cbz	r0, .L178
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3004              		.loc 1 1603 0
 3005 00cc 606B     		ldr	r0, [r4, #52]
 3006 00ce 036D     		ldr	r3, [r0, #80]
 3007 00d0 9847     		blx	r3
 3008              	.LVL267:
 3009 00d2 10BD     		pop	{r4, pc}
 3010              	.LVL268:
 3011              	.L191:
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 3012              		.loc 1 1609 0
 3013 00d4 2046     		mov	r0, r4
 3014 00d6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3015              	.LVL269:
 3016 00da 10BD     		pop	{r4, pc}
 3017              	.LVL270:
 3018              	.L190:
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3019              		.loc 1 1615 0
 3020 00dc 2046     		mov	r0, r4
 3021 00de FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3022              	.LVL271:
 3023 00e2 10BD     		pop	{r4, pc}
 3024              	.LVL272:
 3025              	.L189:
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3026              		.loc 1 1622 0
 3027 00e4 2046     		mov	r0, r4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 105


 3028 00e6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3029              	.LVL273:
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3030              		.loc 1 1623 0
 3031 00ea 0023     		movs	r3, #0
 3032 00ec E363     		str	r3, [r4, #60]
 3033 00ee 10BD     		pop	{r4, pc}
 3034              	.LVL274:
 3035              	.L181:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3036              		.loc 1 1630 0
 3037 00f0 13F0800F 		tst	r3, #128
 3038 00f4 06D0     		beq	.L192
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3039              		.loc 1 1630 0 is_stmt 0 discriminator 1
 3040 00f6 11F0800F 		tst	r1, #128
 3041 00fa 03D0     		beq	.L192
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3042              		.loc 1 1632 0 is_stmt 1
 3043 00fc 2046     		mov	r0, r4
 3044              	.LVL275:
 3045 00fe FFF7FEFF 		bl	UART_Transmit_IT
 3046              	.LVL276:
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3047              		.loc 1 1633 0
 3048 0102 10BD     		pop	{r4, pc}
 3049              	.LVL277:
 3050              	.L192:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3051              		.loc 1 1637 0
 3052 0104 13F0400F 		tst	r3, #64
 3053 0108 05D0     		beq	.L178
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3054              		.loc 1 1637 0 is_stmt 0 discriminator 1
 3055 010a 11F0400F 		tst	r1, #64
 3056 010e 02D0     		beq	.L178
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3057              		.loc 1 1639 0 is_stmt 1
 3058 0110 2046     		mov	r0, r4
 3059              	.LVL278:
 3060 0112 FFF7FEFF 		bl	UART_EndTransmit_IT
 3061              	.LVL279:
 3062              	.L178:
 3063 0116 10BD     		pop	{r4, pc}
 3064              	.LVL280:
 3065              	.L195:
 3066              		.align	2
 3067              	.L194:
 3068 0118 00000000 		.word	UART_DMAAbortOnError
 3069              		.cfi_endproc
 3070              	.LFE146:
 3072              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3073              		.align	2
 3074              		.thumb
 3075              		.thumb_func
 3077              	UART_DMAAbortOnError:
 3078              	.LFB170:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 106


2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3079              		.loc 1 2172 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 0
 3082              		@ frame_needed = 0, uses_anonymous_args = 0
 3083              	.LVL281:
 3084 0000 08B5     		push	{r3, lr}
 3085              	.LCFI38:
 3086              		.cfi_def_cfa_offset 8
 3087              		.cfi_offset 3, -8
 3088              		.cfi_offset 14, -4
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3089              		.loc 1 2173 0
 3090 0002 806B     		ldr	r0, [r0, #56]
 3091              	.LVL282:
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3092              		.loc 1 2174 0
 3093 0004 0023     		movs	r3, #0
 3094 0006 C385     		strh	r3, [r0, #46]	@ movhi
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3095              		.loc 1 2175 0
 3096 0008 C384     		strh	r3, [r0, #38]	@ movhi
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3097              		.loc 1 2177 0
 3098 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3099              	.LVL283:
 3100 000e 08BD     		pop	{r3, pc}
 3101              		.cfi_endproc
 3102              	.LFE170:
 3104              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3105              		.align	2
 3106              		.weak	HAL_UART_AbortCpltCallback
 3107              		.thumb
 3108              		.thumb_func
 3110              	HAL_UART_AbortCpltCallback:
 3111              	.LFB152:
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3112              		.loc 1 1725 0
 3113              		.cfi_startproc
 3114              		@ args = 0, pretend = 0, frame = 0
 3115              		@ frame_needed = 0, uses_anonymous_args = 0
 3116              		@ link register save eliminated.
 3117              	.LVL284:
 3118 0000 7047     		bx	lr
 3119              		.cfi_endproc
 3120              	.LFE152:
 3122 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3123              		.align	2
 3124              		.global	HAL_UART_Abort_IT
 3125              		.thumb
 3126              		.thumb_func
 3128              	HAL_UART_Abort_IT:
 3129              	.LFB143:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3130              		.loc 1 1279 0
 3131              		.cfi_startproc
 3132              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 107


 3133              		@ frame_needed = 0, uses_anonymous_args = 0
 3134              	.LVL285:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3135              		.loc 1 1279 0
 3136 0000 10B5     		push	{r4, lr}
 3137              	.LCFI39:
 3138              		.cfi_def_cfa_offset 8
 3139              		.cfi_offset 4, -8
 3140              		.cfi_offset 14, -4
 3141 0002 0446     		mov	r4, r0
 3142              	.LVL286:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3143              		.loc 1 1283 0
 3144 0004 0268     		ldr	r2, [r0]
 3145 0006 D368     		ldr	r3, [r2, #12]
 3146 0008 23F4F073 		bic	r3, r3, #480
 3147 000c D360     		str	r3, [r2, #12]
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3148              		.loc 1 1284 0
 3149 000e 0268     		ldr	r2, [r0]
 3150 0010 5369     		ldr	r3, [r2, #20]
 3151 0012 23F00103 		bic	r3, r3, #1
 3152 0016 5361     		str	r3, [r2, #20]
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3153              		.loc 1 1289 0
 3154 0018 036B     		ldr	r3, [r0, #48]
 3155 001a 4BB1     		cbz	r3, .L200
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3156              		.loc 1 1293 0
 3157 001c 0268     		ldr	r2, [r0]
 3158 001e 5269     		ldr	r2, [r2, #20]
 3159 0020 12F0800F 		tst	r2, #128
 3160 0024 02D0     		beq	.L201
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3161              		.loc 1 1295 0
 3162 0026 264A     		ldr	r2, .L212
 3163 0028 1A65     		str	r2, [r3, #80]
 3164 002a 01E0     		b	.L200
 3165              	.L201:
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3166              		.loc 1 1299 0
 3167 002c 0022     		movs	r2, #0
 3168 002e 1A65     		str	r2, [r3, #80]
 3169              	.L200:
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3170              		.loc 1 1303 0
 3171 0030 636B     		ldr	r3, [r4, #52]
 3172 0032 4BB1     		cbz	r3, .L202
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3173              		.loc 1 1307 0
 3174 0034 2268     		ldr	r2, [r4]
 3175 0036 5269     		ldr	r2, [r2, #20]
 3176 0038 12F0400F 		tst	r2, #64
 3177 003c 02D0     		beq	.L203
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3178              		.loc 1 1309 0
 3179 003e 214A     		ldr	r2, .L212+4
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 108


 3180 0040 1A65     		str	r2, [r3, #80]
 3181 0042 01E0     		b	.L202
 3182              	.L203:
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3183              		.loc 1 1313 0
 3184 0044 0022     		movs	r2, #0
 3185 0046 1A65     		str	r2, [r3, #80]
 3186              	.L202:
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3187              		.loc 1 1318 0
 3188 0048 2368     		ldr	r3, [r4]
 3189 004a 5A69     		ldr	r2, [r3, #20]
 3190 004c 12F0800F 		tst	r2, #128
 3191 0050 0DD0     		beq	.L207
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3192              		.loc 1 1321 0
 3193 0052 5A69     		ldr	r2, [r3, #20]
 3194 0054 22F08002 		bic	r2, r2, #128
 3195 0058 5A61     		str	r2, [r3, #20]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3196              		.loc 1 1324 0
 3197 005a 206B     		ldr	r0, [r4, #48]
 3198              	.LVL287:
 3199 005c 48B1     		cbz	r0, .L208
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3200              		.loc 1 1330 0
 3201 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3202              	.LVL288:
 3203 0062 40B1     		cbz	r0, .L209
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3204              		.loc 1 1332 0
 3205 0064 236B     		ldr	r3, [r4, #48]
 3206 0066 0022     		movs	r2, #0
 3207 0068 1A65     		str	r2, [r3, #80]
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3208              		.loc 1 1280 0
 3209 006a 0122     		movs	r2, #1
 3210 006c 04E0     		b	.L204
 3211              	.LVL289:
 3212              	.L207:
 3213 006e 0122     		movs	r2, #1
 3214 0070 02E0     		b	.L204
 3215              	.LVL290:
 3216              	.L208:
 3217 0072 0122     		movs	r2, #1
 3218 0074 00E0     		b	.L204
 3219              	.L209:
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3220              		.loc 1 1336 0
 3221 0076 0022     		movs	r2, #0
 3222              	.L204:
 3223              	.LVL291:
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3224              		.loc 1 1342 0
 3225 0078 2368     		ldr	r3, [r4]
 3226 007a 5969     		ldr	r1, [r3, #20]
 3227 007c 11F0400F 		tst	r1, #64
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 109


 3228 0080 0ED0     		beq	.L205
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3229              		.loc 1 1344 0
 3230 0082 5969     		ldr	r1, [r3, #20]
 3231 0084 21F04001 		bic	r1, r1, #64
 3232 0088 5961     		str	r1, [r3, #20]
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3233              		.loc 1 1347 0
 3234 008a 606B     		ldr	r0, [r4, #52]
 3235 008c 40B1     		cbz	r0, .L205
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3236              		.loc 1 1353 0
 3237 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3238              	.LVL292:
 3239 0092 20B1     		cbz	r0, .L210
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3240              		.loc 1 1355 0
 3241 0094 636B     		ldr	r3, [r4, #52]
 3242 0096 0022     		movs	r2, #0
 3243 0098 1A65     		str	r2, [r3, #80]
 3244              	.LVL293:
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3245              		.loc 1 1356 0
 3246 009a 0122     		movs	r2, #1
 3247 009c 00E0     		b	.L205
 3248              	.LVL294:
 3249              	.L210:
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3250              		.loc 1 1360 0
 3251 009e 0022     		movs	r2, #0
 3252              	.L205:
 3253              	.LVL295:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3254              		.loc 1 1366 0
 3255 00a0 5AB1     		cbz	r2, .L206
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3256              		.loc 1 1369 0
 3257 00a2 0023     		movs	r3, #0
 3258 00a4 E384     		strh	r3, [r4, #38]	@ movhi
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3259              		.loc 1 1370 0
 3260 00a6 E385     		strh	r3, [r4, #46]	@ movhi
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3261              		.loc 1 1373 0
 3262 00a8 E363     		str	r3, [r4, #60]
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3263              		.loc 1 1376 0
 3264 00aa 2023     		movs	r3, #32
 3265 00ac 84F83930 		strb	r3, [r4, #57]
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3266              		.loc 1 1377 0
 3267 00b0 84F83A30 		strb	r3, [r4, #58]
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3268              		.loc 1 1380 0
 3269 00b4 2046     		mov	r0, r4
 3270 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3271              	.LVL296:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 110


 3272              	.L206:
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3273              		.loc 1 1384 0
 3274 00ba 0020     		movs	r0, #0
 3275 00bc 10BD     		pop	{r4, pc}
 3276              	.LVL297:
 3277              	.L213:
 3278 00be 00BF     		.align	2
 3279              	.L212:
 3280 00c0 00000000 		.word	UART_DMATxAbortCallback
 3281 00c4 00000000 		.word	UART_DMARxAbortCallback
 3282              		.cfi_endproc
 3283              	.LFE143:
 3285              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3286              		.align	2
 3287              		.thumb
 3288              		.thumb_func
 3290              	UART_DMARxAbortCallback:
 3291              	.LFB172:
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3292              		.loc 1 2227 0
 3293              		.cfi_startproc
 3294              		@ args = 0, pretend = 0, frame = 0
 3295              		@ frame_needed = 0, uses_anonymous_args = 0
 3296              	.LVL298:
 3297 0000 08B5     		push	{r3, lr}
 3298              	.LCFI40:
 3299              		.cfi_def_cfa_offset 8
 3300              		.cfi_offset 3, -8
 3301              		.cfi_offset 14, -4
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3302              		.loc 1 2228 0
 3303 0002 806B     		ldr	r0, [r0, #56]
 3304              	.LVL299:
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3305              		.loc 1 2230 0
 3306 0004 436B     		ldr	r3, [r0, #52]
 3307 0006 0022     		movs	r2, #0
 3308 0008 1A65     		str	r2, [r3, #80]
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3309              		.loc 1 2233 0
 3310 000a 036B     		ldr	r3, [r0, #48]
 3311 000c 0BB1     		cbz	r3, .L215
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3312              		.loc 1 2235 0
 3313 000e 1B6D     		ldr	r3, [r3, #80]
 3314 0010 53B9     		cbnz	r3, .L214
 3315              	.L215:
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3316              		.loc 1 2242 0
 3317 0012 0023     		movs	r3, #0
 3318 0014 C384     		strh	r3, [r0, #38]	@ movhi
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3319              		.loc 1 2243 0
 3320 0016 C385     		strh	r3, [r0, #46]	@ movhi
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3321              		.loc 1 2246 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 111


 3322 0018 C363     		str	r3, [r0, #60]
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3323              		.loc 1 2249 0
 3324 001a 2023     		movs	r3, #32
 3325 001c 80F83930 		strb	r3, [r0, #57]
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3326              		.loc 1 2250 0
 3327 0020 80F83A30 		strb	r3, [r0, #58]
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3328              		.loc 1 2253 0
 3329 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3330              	.LVL300:
 3331              	.L214:
 3332 0028 08BD     		pop	{r3, pc}
 3333              		.cfi_endproc
 3334              	.LFE172:
 3336 002a 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3337              		.align	2
 3338              		.thumb
 3339              		.thumb_func
 3341              	UART_DMATxAbortCallback:
 3342              	.LFB171:
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3343              		.loc 1 2189 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 0
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347              	.LVL301:
 3348 0000 08B5     		push	{r3, lr}
 3349              	.LCFI41:
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 3, -8
 3352              		.cfi_offset 14, -4
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3353              		.loc 1 2190 0
 3354 0002 806B     		ldr	r0, [r0, #56]
 3355              	.LVL302:
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3356              		.loc 1 2192 0
 3357 0004 036B     		ldr	r3, [r0, #48]
 3358 0006 0022     		movs	r2, #0
 3359 0008 1A65     		str	r2, [r3, #80]
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3360              		.loc 1 2195 0
 3361 000a 436B     		ldr	r3, [r0, #52]
 3362 000c 0BB1     		cbz	r3, .L219
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3363              		.loc 1 2197 0
 3364 000e 1B6D     		ldr	r3, [r3, #80]
 3365 0010 53B9     		cbnz	r3, .L218
 3366              	.L219:
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3367              		.loc 1 2204 0
 3368 0012 0023     		movs	r3, #0
 3369 0014 C384     		strh	r3, [r0, #38]	@ movhi
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3370              		.loc 1 2205 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 112


 3371 0016 C385     		strh	r3, [r0, #46]	@ movhi
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3372              		.loc 1 2208 0
 3373 0018 C363     		str	r3, [r0, #60]
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3374              		.loc 1 2211 0
 3375 001a 2023     		movs	r3, #32
 3376 001c 80F83930 		strb	r3, [r0, #57]
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3377              		.loc 1 2212 0
 3378 0020 80F83A30 		strb	r3, [r0, #58]
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3379              		.loc 1 2215 0
 3380 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3381              	.LVL303:
 3382              	.L218:
 3383 0028 08BD     		pop	{r3, pc}
 3384              		.cfi_endproc
 3385              	.LFE171:
 3387 002a 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3388              		.align	2
 3389              		.weak	HAL_UART_AbortTransmitCpltCallback
 3390              		.thumb
 3391              		.thumb_func
 3393              	HAL_UART_AbortTransmitCpltCallback:
 3394              	.LFB153:
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3395              		.loc 1 1739 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 0
 3398              		@ frame_needed = 0, uses_anonymous_args = 0
 3399              		@ link register save eliminated.
 3400              	.LVL304:
 3401 0000 7047     		bx	lr
 3402              		.cfi_endproc
 3403              	.LFE153:
 3405 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3406              		.align	2
 3407              		.global	HAL_UART_AbortTransmit_IT
 3408              		.thumb
 3409              		.thumb_func
 3411              	HAL_UART_AbortTransmit_IT:
 3412              	.LFB144:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3413              		.loc 1 1401 0
 3414              		.cfi_startproc
 3415              		@ args = 0, pretend = 0, frame = 0
 3416              		@ frame_needed = 0, uses_anonymous_args = 0
 3417              	.LVL305:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3418              		.loc 1 1401 0
 3419 0000 10B5     		push	{r4, lr}
 3420              	.LCFI42:
 3421              		.cfi_def_cfa_offset 8
 3422              		.cfi_offset 4, -8
 3423              		.cfi_offset 14, -4
 3424 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 113


1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3425              		.loc 1 1403 0
 3426 0004 0268     		ldr	r2, [r0]
 3427 0006 D368     		ldr	r3, [r2, #12]
 3428 0008 23F0C003 		bic	r3, r3, #192
 3429 000c D360     		str	r3, [r2, #12]
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3430              		.loc 1 1406 0
 3431 000e 0368     		ldr	r3, [r0]
 3432 0010 5A69     		ldr	r2, [r3, #20]
 3433 0012 12F0800F 		tst	r2, #128
 3434 0016 17D0     		beq	.L224
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3435              		.loc 1 1408 0
 3436 0018 5A69     		ldr	r2, [r3, #20]
 3437 001a 22F08002 		bic	r2, r2, #128
 3438 001e 5A61     		str	r2, [r3, #20]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3439              		.loc 1 1411 0
 3440 0020 036B     		ldr	r3, [r0, #48]
 3441 0022 4BB1     		cbz	r3, .L225
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3442              		.loc 1 1415 0
 3443 0024 0D4A     		ldr	r2, .L228
 3444 0026 1A65     		str	r2, [r3, #80]
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3445              		.loc 1 1418 0
 3446 0028 006B     		ldr	r0, [r0, #48]
 3447              	.LVL306:
 3448 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3449              	.LVL307:
 3450 002e 90B1     		cbz	r0, .L226
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3451              		.loc 1 1421 0
 3452 0030 206B     		ldr	r0, [r4, #48]
 3453 0032 036D     		ldr	r3, [r0, #80]
 3454 0034 9847     		blx	r3
 3455              	.LVL308:
 3456 0036 0EE0     		b	.L226
 3457              	.LVL309:
 3458              	.L225:
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3459              		.loc 1 1427 0
 3460 0038 0023     		movs	r3, #0
 3461 003a C384     		strh	r3, [r0, #38]	@ movhi
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3462              		.loc 1 1430 0
 3463 003c 2023     		movs	r3, #32
 3464 003e 80F83930 		strb	r3, [r0, #57]
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3465              		.loc 1 1433 0
 3466 0042 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3467              	.LVL310:
 3468 0046 06E0     		b	.L226
 3469              	.LVL311:
 3470              	.L224:
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 114


 3471              		.loc 1 1439 0
 3472 0048 0023     		movs	r3, #0
 3473 004a C384     		strh	r3, [r0, #38]	@ movhi
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3474              		.loc 1 1442 0
 3475 004c 2023     		movs	r3, #32
 3476 004e 80F83930 		strb	r3, [r0, #57]
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3477              		.loc 1 1445 0
 3478 0052 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3479              	.LVL312:
 3480              	.L226:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3481              		.loc 1 1449 0
 3482 0056 0020     		movs	r0, #0
 3483 0058 10BD     		pop	{r4, pc}
 3484              	.LVL313:
 3485              	.L229:
 3486 005a 00BF     		.align	2
 3487              	.L228:
 3488 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3489              		.cfi_endproc
 3490              	.LFE144:
 3492              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3493              		.align	2
 3494              		.thumb
 3495              		.thumb_func
 3497              	UART_DMATxOnlyAbortCallback:
 3498              	.LFB173:
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3499              		.loc 1 2265 0
 3500              		.cfi_startproc
 3501              		@ args = 0, pretend = 0, frame = 0
 3502              		@ frame_needed = 0, uses_anonymous_args = 0
 3503              	.LVL314:
 3504 0000 08B5     		push	{r3, lr}
 3505              	.LCFI43:
 3506              		.cfi_def_cfa_offset 8
 3507              		.cfi_offset 3, -8
 3508              		.cfi_offset 14, -4
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3509              		.loc 1 2266 0
 3510 0002 806B     		ldr	r0, [r0, #56]
 3511              	.LVL315:
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3512              		.loc 1 2268 0
 3513 0004 0023     		movs	r3, #0
 3514 0006 C384     		strh	r3, [r0, #38]	@ movhi
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3515              		.loc 1 2271 0
 3516 0008 2023     		movs	r3, #32
 3517 000a 80F83930 		strb	r3, [r0, #57]
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3518              		.loc 1 2274 0
 3519 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3520              	.LVL316:
 3521 0012 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 115


 3522              		.cfi_endproc
 3523              	.LFE173:
 3525              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3526              		.align	2
 3527              		.weak	HAL_UART_AbortReceiveCpltCallback
 3528              		.thumb
 3529              		.thumb_func
 3531              	HAL_UART_AbortReceiveCpltCallback:
 3532              	.LFB154:
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3533              		.loc 1 1754 0
 3534              		.cfi_startproc
 3535              		@ args = 0, pretend = 0, frame = 0
 3536              		@ frame_needed = 0, uses_anonymous_args = 0
 3537              		@ link register save eliminated.
 3538              	.LVL317:
 3539 0000 7047     		bx	lr
 3540              		.cfi_endproc
 3541              	.LFE154:
 3543 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3544              		.align	2
 3545              		.global	HAL_UART_AbortReceive_IT
 3546              		.thumb
 3547              		.thumb_func
 3549              	HAL_UART_AbortReceive_IT:
 3550              	.LFB145:
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3551              		.loc 1 1466 0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              	.LVL318:
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3556              		.loc 1 1466 0
 3557 0000 10B5     		push	{r4, lr}
 3558              	.LCFI44:
 3559              		.cfi_def_cfa_offset 8
 3560              		.cfi_offset 4, -8
 3561              		.cfi_offset 14, -4
 3562 0002 0446     		mov	r4, r0
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3563              		.loc 1 1468 0
 3564 0004 0268     		ldr	r2, [r0]
 3565 0006 D368     		ldr	r3, [r2, #12]
 3566 0008 23F49073 		bic	r3, r3, #288
 3567 000c D360     		str	r3, [r2, #12]
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3568              		.loc 1 1469 0
 3569 000e 0268     		ldr	r2, [r0]
 3570 0010 5369     		ldr	r3, [r2, #20]
 3571 0012 23F00103 		bic	r3, r3, #1
 3572 0016 5361     		str	r3, [r2, #20]
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3573              		.loc 1 1472 0
 3574 0018 0368     		ldr	r3, [r0]
 3575 001a 5A69     		ldr	r2, [r3, #20]
 3576 001c 12F0400F 		tst	r2, #64
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 116


 3577 0020 17D0     		beq	.L234
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3578              		.loc 1 1474 0
 3579 0022 5A69     		ldr	r2, [r3, #20]
 3580 0024 22F04002 		bic	r2, r2, #64
 3581 0028 5A61     		str	r2, [r3, #20]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3582              		.loc 1 1477 0
 3583 002a 436B     		ldr	r3, [r0, #52]
 3584 002c 4BB1     		cbz	r3, .L235
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3585              		.loc 1 1481 0
 3586 002e 0D4A     		ldr	r2, .L238
 3587 0030 1A65     		str	r2, [r3, #80]
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3588              		.loc 1 1484 0
 3589 0032 406B     		ldr	r0, [r0, #52]
 3590              	.LVL319:
 3591 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3592              	.LVL320:
 3593 0038 90B1     		cbz	r0, .L236
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3594              		.loc 1 1487 0
 3595 003a 606B     		ldr	r0, [r4, #52]
 3596 003c 036D     		ldr	r3, [r0, #80]
 3597 003e 9847     		blx	r3
 3598              	.LVL321:
 3599 0040 0EE0     		b	.L236
 3600              	.LVL322:
 3601              	.L235:
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3602              		.loc 1 1493 0
 3603 0042 0023     		movs	r3, #0
 3604 0044 C385     		strh	r3, [r0, #46]	@ movhi
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3605              		.loc 1 1496 0
 3606 0046 2023     		movs	r3, #32
 3607 0048 80F83A30 		strb	r3, [r0, #58]
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3608              		.loc 1 1499 0
 3609 004c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3610              	.LVL323:
 3611 0050 06E0     		b	.L236
 3612              	.LVL324:
 3613              	.L234:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3614              		.loc 1 1505 0
 3615 0052 0023     		movs	r3, #0
 3616 0054 C385     		strh	r3, [r0, #46]	@ movhi
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3617              		.loc 1 1508 0
 3618 0056 2023     		movs	r3, #32
 3619 0058 80F83A30 		strb	r3, [r0, #58]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3620              		.loc 1 1511 0
 3621 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3622              	.LVL325:
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 117


 3623              	.L236:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3624              		.loc 1 1515 0
 3625 0060 0020     		movs	r0, #0
 3626 0062 10BD     		pop	{r4, pc}
 3627              	.LVL326:
 3628              	.L239:
 3629              		.align	2
 3630              	.L238:
 3631 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3632              		.cfi_endproc
 3633              	.LFE145:
 3635              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3636              		.align	2
 3637              		.thumb
 3638              		.thumb_func
 3640              	UART_DMARxOnlyAbortCallback:
 3641              	.LFB174:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3642              		.loc 1 2286 0
 3643              		.cfi_startproc
 3644              		@ args = 0, pretend = 0, frame = 0
 3645              		@ frame_needed = 0, uses_anonymous_args = 0
 3646              	.LVL327:
 3647 0000 08B5     		push	{r3, lr}
 3648              	.LCFI45:
 3649              		.cfi_def_cfa_offset 8
 3650              		.cfi_offset 3, -8
 3651              		.cfi_offset 14, -4
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3652              		.loc 1 2287 0
 3653 0002 806B     		ldr	r0, [r0, #56]
 3654              	.LVL328:
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3655              		.loc 1 2289 0
 3656 0004 0023     		movs	r3, #0
 3657 0006 C385     		strh	r3, [r0, #46]	@ movhi
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3658              		.loc 1 2292 0
 3659 0008 2023     		movs	r3, #32
 3660 000a 80F83A30 		strb	r3, [r0, #58]
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3661              		.loc 1 2295 0
 3662 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3663              	.LVL329:
 3664 0012 08BD     		pop	{r3, pc}
 3665              		.cfi_endproc
 3666              	.LFE174:
 3668              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3669              		.align	2
 3670              		.global	HAL_LIN_SendBreak
 3671              		.thumb
 3672              		.thumb_func
 3674              	HAL_LIN_SendBreak:
 3675              	.LFB155:
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3676              		.loc 1 1791 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 118


 3677              		.cfi_startproc
 3678              		@ args = 0, pretend = 0, frame = 0
 3679              		@ frame_needed = 0, uses_anonymous_args = 0
 3680              		@ link register save eliminated.
 3681              	.LVL330:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3682              		.loc 1 1796 0
 3683 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3684 0004 012B     		cmp	r3, #1
 3685 0006 12D0     		beq	.L244
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3686              		.loc 1 1796 0 is_stmt 0 discriminator 2
 3687 0008 0123     		movs	r3, #1
 3688 000a 80F83830 		strb	r3, [r0, #56]
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3689              		.loc 1 1798 0 is_stmt 1 discriminator 2
 3690 000e 2423     		movs	r3, #36
 3691 0010 80F83930 		strb	r3, [r0, #57]
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 3692              		.loc 1 1801 0 discriminator 2
 3693 0014 0268     		ldr	r2, [r0]
 3694 0016 D368     		ldr	r3, [r2, #12]
 3695 0018 43F00103 		orr	r3, r3, #1
 3696 001c D360     		str	r3, [r2, #12]
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3697              		.loc 1 1803 0 discriminator 2
 3698 001e 2023     		movs	r3, #32
 3699 0020 80F83930 		strb	r3, [r0, #57]
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3700              		.loc 1 1806 0 discriminator 2
 3701 0024 0023     		movs	r3, #0
 3702 0026 80F83830 		strb	r3, [r0, #56]
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3703              		.loc 1 1808 0 discriminator 2
 3704 002a 1846     		mov	r0, r3
 3705              	.LVL331:
 3706 002c 7047     		bx	lr
 3707              	.LVL332:
 3708              	.L244:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3709              		.loc 1 1796 0
 3710 002e 0220     		movs	r0, #2
 3711              	.LVL333:
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3712              		.loc 1 1809 0
 3713 0030 7047     		bx	lr
 3714              		.cfi_endproc
 3715              	.LFE155:
 3717 0032 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3718              		.align	2
 3719              		.global	HAL_MultiProcessor_EnterMuteMode
 3720              		.thumb
 3721              		.thumb_func
 3723              	HAL_MultiProcessor_EnterMuteMode:
 3724              	.LFB156:
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3725              		.loc 1 1818 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 119


 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 0
 3728              		@ frame_needed = 0, uses_anonymous_args = 0
 3729              		@ link register save eliminated.
 3730              	.LVL334:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3731              		.loc 1 1823 0
 3732 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3733 0004 012B     		cmp	r3, #1
 3734 0006 12D0     		beq	.L247
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3735              		.loc 1 1823 0 is_stmt 0 discriminator 2
 3736 0008 0123     		movs	r3, #1
 3737 000a 80F83830 		strb	r3, [r0, #56]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3738              		.loc 1 1825 0 is_stmt 1 discriminator 2
 3739 000e 2423     		movs	r3, #36
 3740 0010 80F83930 		strb	r3, [r0, #57]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3741              		.loc 1 1828 0 discriminator 2
 3742 0014 0268     		ldr	r2, [r0]
 3743 0016 D368     		ldr	r3, [r2, #12]
 3744 0018 43F00203 		orr	r3, r3, #2
 3745 001c D360     		str	r3, [r2, #12]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3746              		.loc 1 1830 0 discriminator 2
 3747 001e 2023     		movs	r3, #32
 3748 0020 80F83930 		strb	r3, [r0, #57]
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3749              		.loc 1 1833 0 discriminator 2
 3750 0024 0023     		movs	r3, #0
 3751 0026 80F83830 		strb	r3, [r0, #56]
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3752              		.loc 1 1835 0 discriminator 2
 3753 002a 1846     		mov	r0, r3
 3754              	.LVL335:
 3755 002c 7047     		bx	lr
 3756              	.LVL336:
 3757              	.L247:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3758              		.loc 1 1823 0
 3759 002e 0220     		movs	r0, #2
 3760              	.LVL337:
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3761              		.loc 1 1836 0
 3762 0030 7047     		bx	lr
 3763              		.cfi_endproc
 3764              	.LFE156:
 3766 0032 00BF     		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3767              		.align	2
 3768              		.global	HAL_MultiProcessor_ExitMuteMode
 3769              		.thumb
 3770              		.thumb_func
 3772              	HAL_MultiProcessor_ExitMuteMode:
 3773              	.LFB157:
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3774              		.loc 1 1845 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 120


 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 0
 3777              		@ frame_needed = 0, uses_anonymous_args = 0
 3778              		@ link register save eliminated.
 3779              	.LVL338:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3780              		.loc 1 1850 0
 3781 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3782 0004 012B     		cmp	r3, #1
 3783 0006 12D0     		beq	.L250
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3784              		.loc 1 1850 0 is_stmt 0 discriminator 2
 3785 0008 0123     		movs	r3, #1
 3786 000a 80F83830 		strb	r3, [r0, #56]
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3787              		.loc 1 1852 0 is_stmt 1 discriminator 2
 3788 000e 2423     		movs	r3, #36
 3789 0010 80F83930 		strb	r3, [r0, #57]
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3790              		.loc 1 1855 0 discriminator 2
 3791 0014 0268     		ldr	r2, [r0]
 3792 0016 D368     		ldr	r3, [r2, #12]
 3793 0018 23F00203 		bic	r3, r3, #2
 3794 001c D360     		str	r3, [r2, #12]
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3795              		.loc 1 1857 0 discriminator 2
 3796 001e 2023     		movs	r3, #32
 3797 0020 80F83930 		strb	r3, [r0, #57]
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3798              		.loc 1 1860 0 discriminator 2
 3799 0024 0023     		movs	r3, #0
 3800 0026 80F83830 		strb	r3, [r0, #56]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3801              		.loc 1 1862 0 discriminator 2
 3802 002a 1846     		mov	r0, r3
 3803              	.LVL339:
 3804 002c 7047     		bx	lr
 3805              	.LVL340:
 3806              	.L250:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3807              		.loc 1 1850 0
 3808 002e 0220     		movs	r0, #2
 3809              	.LVL341:
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3810              		.loc 1 1863 0
 3811 0030 7047     		bx	lr
 3812              		.cfi_endproc
 3813              	.LFE157:
 3815 0032 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3816              		.align	2
 3817              		.global	HAL_HalfDuplex_EnableTransmitter
 3818              		.thumb
 3819              		.thumb_func
 3821              	HAL_HalfDuplex_EnableTransmitter:
 3822              	.LFB158:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3823              		.loc 1 1872 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 121


 3824              		.cfi_startproc
 3825              		@ args = 0, pretend = 0, frame = 0
 3826              		@ frame_needed = 0, uses_anonymous_args = 0
 3827              		@ link register save eliminated.
 3828              	.LVL342:
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3829              		.loc 1 1876 0
 3830 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3831 0004 012B     		cmp	r3, #1
 3832 0006 14D0     		beq	.L253
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3833              		.loc 1 1876 0 is_stmt 0 discriminator 2
 3834 0008 0123     		movs	r3, #1
 3835 000a 80F83830 		strb	r3, [r0, #56]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3836              		.loc 1 1878 0 is_stmt 1 discriminator 2
 3837 000e 2423     		movs	r3, #36
 3838 0010 80F83930 		strb	r3, [r0, #57]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3839              		.loc 1 1881 0 discriminator 2
 3840 0014 0268     		ldr	r2, [r0]
 3841 0016 D368     		ldr	r3, [r2, #12]
 3842              	.LVL343:
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3843              		.loc 1 1884 0 discriminator 2
 3844 0018 23F00C03 		bic	r3, r3, #12
 3845              	.LVL344:
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3846              		.loc 1 1887 0 discriminator 2
 3847 001c 43F00803 		orr	r3, r3, #8
 3848              	.LVL345:
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 3849              		.loc 1 1890 0 discriminator 2
 3850 0020 D360     		str	r3, [r2, #12]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3851              		.loc 1 1892 0 discriminator 2
 3852 0022 2023     		movs	r3, #32
 3853              	.LVL346:
 3854 0024 80F83930 		strb	r3, [r0, #57]
 3855              	.LVL347:
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3856              		.loc 1 1895 0 discriminator 2
 3857 0028 0023     		movs	r3, #0
 3858 002a 80F83830 		strb	r3, [r0, #56]
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3859              		.loc 1 1897 0 discriminator 2
 3860 002e 1846     		mov	r0, r3
 3861              	.LVL348:
 3862 0030 7047     		bx	lr
 3863              	.LVL349:
 3864              	.L253:
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3865              		.loc 1 1876 0
 3866 0032 0220     		movs	r0, #2
 3867              	.LVL350:
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3868              		.loc 1 1898 0
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 122


 3869 0034 7047     		bx	lr
 3870              		.cfi_endproc
 3871              	.LFE158:
 3873 0036 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3874              		.align	2
 3875              		.global	HAL_HalfDuplex_EnableReceiver
 3876              		.thumb
 3877              		.thumb_func
 3879              	HAL_HalfDuplex_EnableReceiver:
 3880              	.LFB159:
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3881              		.loc 1 1907 0
 3882              		.cfi_startproc
 3883              		@ args = 0, pretend = 0, frame = 0
 3884              		@ frame_needed = 0, uses_anonymous_args = 0
 3885              		@ link register save eliminated.
 3886              	.LVL351:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3887              		.loc 1 1911 0
 3888 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3889 0004 012B     		cmp	r3, #1
 3890 0006 14D0     		beq	.L256
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3891              		.loc 1 1911 0 is_stmt 0 discriminator 2
 3892 0008 0123     		movs	r3, #1
 3893 000a 80F83830 		strb	r3, [r0, #56]
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3894              		.loc 1 1913 0 is_stmt 1 discriminator 2
 3895 000e 2423     		movs	r3, #36
 3896 0010 80F83930 		strb	r3, [r0, #57]
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3897              		.loc 1 1916 0 discriminator 2
 3898 0014 0268     		ldr	r2, [r0]
 3899 0016 D368     		ldr	r3, [r2, #12]
 3900              	.LVL352:
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3901              		.loc 1 1919 0 discriminator 2
 3902 0018 23F00C03 		bic	r3, r3, #12
 3903              	.LVL353:
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3904              		.loc 1 1922 0 discriminator 2
 3905 001c 43F00403 		orr	r3, r3, #4
 3906              	.LVL354:
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3907              		.loc 1 1925 0 discriminator 2
 3908 0020 D360     		str	r3, [r2, #12]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3909              		.loc 1 1927 0 discriminator 2
 3910 0022 2023     		movs	r3, #32
 3911              	.LVL355:
 3912 0024 80F83930 		strb	r3, [r0, #57]
 3913              	.LVL356:
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3914              		.loc 1 1930 0 discriminator 2
 3915 0028 0023     		movs	r3, #0
 3916 002a 80F83830 		strb	r3, [r0, #56]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 123


 3917              		.loc 1 1932 0 discriminator 2
 3918 002e 1846     		mov	r0, r3
 3919              	.LVL357:
 3920 0030 7047     		bx	lr
 3921              	.LVL358:
 3922              	.L256:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3923              		.loc 1 1911 0
 3924 0032 0220     		movs	r0, #2
 3925              	.LVL359:
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3926              		.loc 1 1933 0
 3927 0034 7047     		bx	lr
 3928              		.cfi_endproc
 3929              	.LFE159:
 3931 0036 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3932              		.align	2
 3933              		.global	HAL_UART_GetState
 3934              		.thumb
 3935              		.thumb_func
 3937              	HAL_UART_GetState:
 3938              	.LFB160:
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3939              		.loc 1 1964 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 0
 3942              		@ frame_needed = 0, uses_anonymous_args = 0
 3943              		@ link register save eliminated.
 3944              	.LVL360:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 3945              		.loc 1 1966 0
 3946 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 3947              	.LVL361:
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3948              		.loc 1 1967 0
 3949 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 3950              	.LVL362:
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3951              		.loc 1 1970 0
 3952 0008 1843     		orrs	r0, r0, r3
 3953              	.LVL363:
 3954 000a 7047     		bx	lr
 3955              		.cfi_endproc
 3956              	.LFE160:
 3958              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3959              		.align	2
 3960              		.global	HAL_UART_GetError
 3961              		.thumb
 3962              		.thumb_func
 3964              	HAL_UART_GetError:
 3965              	.LFB161:
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 3966              		.loc 1 1979 0
 3967              		.cfi_startproc
 3968              		@ args = 0, pretend = 0, frame = 0
 3969              		@ frame_needed = 0, uses_anonymous_args = 0
 3970              		@ link register save eliminated.
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 124


 3971              	.LVL364:
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3972              		.loc 1 1980 0
 3973 0000 C06B     		ldr	r0, [r0, #60]
 3974              	.LVL365:
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3975              		.loc 1 1981 0
 3976 0002 7047     		bx	lr
 3977              		.cfi_endproc
 3978              	.LFE161:
 3980              		.text
 3981              	.Letext0:
 3982              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 3983              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 3984              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 3985              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3986              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3987              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3988              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3989              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3990              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3991              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 125


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:22     .text.UART_EndTxTransfer:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:48     .text.UART_EndRxTransfer:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:52     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:78     .text.UART_Transmit_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:82     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:170    .text.UART_SetConfig:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:174    .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:519    .text.UART_SetConfig:00000324 $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:525    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:529    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:606    .text.HAL_UART_MspInit:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:611    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:624    .text.HAL_UART_Init:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:629    .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:707    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:712    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:796    .text.HAL_LIN_Init:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:801    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:901    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:906    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1012   .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1017   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1030   .text.HAL_UART_DeInit:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1035   .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1082   .text.HAL_UART_Transmit:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1087   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1270   .text.HAL_UART_Receive:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1275   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1465   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1470   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1545   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1550   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1630   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1635   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1746   .text.HAL_UART_Transmit_DMA:00000080 $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2393   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2497   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2782   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1753   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1758   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1891   .text.HAL_UART_Receive_DMA:0000009c $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2543   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2736   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1898   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1903   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1981   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:1986   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2084   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2089   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2167   .text.HAL_UART_Abort:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2172   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2254   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2259   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2310   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 126


C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2315   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2371   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2376   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2389   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2441   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2445   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2475   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2480   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2493   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2521   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2526   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2539   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2596   .text.UART_Receive_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2600   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2714   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2719   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2732   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2760   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2765   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2778   .text.UART_DMAError:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2853   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:2858   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3068   .text.HAL_UART_IRQHandler:00000118 $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3077   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3073   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3105   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3110   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3123   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3128   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3280   .text.HAL_UART_Abort_IT:000000c0 $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3341   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3290   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3286   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3337   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3388   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3393   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3406   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3411   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3488   .text.HAL_UART_AbortTransmit_IT:0000005c $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3497   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3493   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3526   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3531   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3544   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3549   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3631   .text.HAL_UART_AbortReceive_IT:00000064 $d
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3640   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3636   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3669   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3674   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3718   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3723   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3767   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3772   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3816   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3821   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3874   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
ARM GAS  C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s 			page 127


C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3879   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3932   .text.HAL_UART_GetState:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3937   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3959   .text.HAL_UART_GetError:00000000 $t
C:\Users\shun2\AppData\Local\Temp\ccZ2xGvb.s:3964   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
